<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function ($uibModal, $scope, $http, $window, spUtil, nowAttachmentHandler, $rootScope) {
	var c = this;
	$scope.submitButtonMsg = $scope.data.submitButtonMsg;
	
	var ah = $scope.attachmentHandler = new nowAttachmentHandler(setAttachments, function() {});
	ah.setParams('sp_portal', $scope.data._attachmentGUID, 1024 * 1024 * 24);
	function setAttachments(attachments, action) {
		$scope.attachments = attachments;
	}
	$scope.attachmentHandler.getAttachmentList();
	
	
	$scope.confirmDeleteAttachment = function(attachment, $event) {
		$rootScope.$broadcast("dialog.delete_attachment.show", {
			parms: {
				ok: function() {
					$scope.attachmentHandler.deleteAttachment(attachment);
					$rootScope.$broadcast("dialog.delete_attachment.close");
				},
				cancel: function() {
					$rootScope.$broadcast("dialog.delete_attachment.close");
				},
				details: attachment.name
			}
		});
	};
	
	// Show form as related list
	/*$rootScope.$on("showForm", function(evt, response) {
		$scope.data.sys_id = response;
		$scope.server.get({sys_id:response}).then(function(r) {
		});
		
		alert('This fires');
		
	});*/
	
	// Breadcrumbs
	if ($scope.data.sc_cat_item) {
		var bc = [{label: $scope.page.title, url: '?id=' + $scope.data.sc_catalog_page}];
		if ($scope.data.category)
			bc[bc.length] = {label: $scope.data.category.name, url: $scope.data.category.url};
		
		bc[bc.length] = {label: $scope.data.sc_cat_item.name, url: '#'};
		$rootScope.$broadcast('sp.update.breadcrumbs', bc);
		spUtil.setSearchPage('sc');
	}
	
	
	c.openModal = function() {
		c.modalInstance = $uibModal.open({
			templateUrl: 'modalTemplate',
			scope: $scope
		});
	};
	
	c.closeModal = function() {
		window.location.href = '?id=new_home';
	};
	
	var g_form;
	
	$scope.$on('spModel.gForm.initialized', function(e, gFormInstance){
		g_form = gFormInstance;
		loadMessages();
		
		//Set task form field
		setTaskDefinition();
	
		//Set default values
		if ($scope.data.taskClosed)
			setDefaultFields();
		
		// This runs after all onSubmit scripts have executed
		g_form.$private.events.on('submitted', function(){
			getOne();
			//Close task
			/*alert('Task gets closed');
			
			c.server.get({closeTask: true, taskID: $scope.data.task_sys_id}).then(function(r) {getOne();});*/
		});
	});
	
	$scope.triggerOnSubmit = function(){
		if (g_form) {
			var id_producer = g_form.getUniqueValue();
			
			///////////////////////////////////////////////////////////////////////////////////////////
			//Transfer pension
			if((id_producer == 'aece069b4f3fd200203344f18110c7eb')||(id_producer == '004d235c4ffb1200203344f18110c763')||(id_producer == 'bab1b2004fb71200203344f18110c7e2')
				||(id_producer == '072fc3104ffb1200203344f18110c728')
			||(id_producer == 'e66c36ea4f7f9200c7acf1728110c7b7'))
			{
				if (!(g_form.getBooleanValue('allow_'))||!(g_form.getBooleanValue('certify_')))   {
					g_form.addErrorMessage($scope.data.msg_submission);
					return false;
				}
				else g_form.submit();
				}
			else if(id_producer == '134348244f3f1200203344f18110c74b'){
				//Language training
				if ((g_form.getValue('solution')!= 4)){
					if (!(g_form.getBooleanValue('allow_'))||!(g_form.getBooleanValue('certify_'))||!(g_form.getBooleanValue('manager_agreement_')))   {
						g_form.addErrorMessage($scope.data.msg_LT_confirmation);
						return false;
					}
					else  g_form.submit();
					}
				
				//Superiors agreement
				if ((g_form.getValue('solution')== 4)&&(g_form.getValue('immersion_options')== 2)) {
					if (!(g_form.getBooleanValue('superiors_agreement')))   {
						g_form.addErrorMessage($scope.data.msg_LT_superiors);
						return false;
					}
					else g_form.submit();
					}
				else if ((g_form.getValue('solution')== 4)&&(g_form.getValue('immersion_options')== 1)) {
					g_form.submit();
				}
			}
			
			else if (id_producer == '90a69fbd4f5e2200203344f18110c7f1')//Medical part-time
				{
				
				var error=0;
				if(g_form.getValue('type')==1){
					if (!(g_form.getBooleanValue('declare1_'))||!(g_form.getBooleanValue('declare2_'))||!(g_form.getBooleanValue('declare3_')))   {
						error =1;
						g_form.addErrorMessage($scope.data.msg_MPT_confirmation);
						return false;
					}
					
					
				}
				
				if (!(g_form.getBooleanValue('allow_'))||!(g_form.getBooleanValue('certify_')))   {
					g_form.addErrorMessage($scope.data.msg_submission);
					error =1;
					return false;
				}
				
				if($scope.attachments.length < 1){
					error =1;
					g_form.addErrorMessage($scope.data.msg_MPT_certificate);
					return false;
				}
				
				if(error==0){
					g_form.submit();
					
				}
				
				
			}
			
			
			else if (id_producer == 'b9598b954fa47640df11ecd18110c72f')// tax declaration
				{
				var error=0;
				if($scope.attachments.length < 1){
					error =1;
					g_form.addErrorMessage($scope.data.msg_attachment);
					
				}
				
				if (!(g_form.getBooleanValue('allow_'))||!(g_form.getBooleanValue('certify_')))   {
					error =1;
					g_form.addErrorMessage($scope.data.msg_submission);
				}
				
				if(error==1){
					return false;
					
				}else g_form.submit();
				
			}
			else if (id_producer == '09fef01f4fd5f600203344f18110c79f')// certificate Pension Plan Cafeteria
				
			{
				var error=0;
				if($scope.attachments.length < 1){
					error =1;
					g_form.addErrorMessage($scope.data.msg_attachment);
					
				}
				
				if (!(g_form.getBooleanValue('allow_'))||!(g_form.getBooleanValue('certify_')))   {
					error =1;
					g_form.addErrorMessage($scope.data.msg_submission);
				}
				
				if(error==1){
					return false;
					
				}else g_form.submit();
				
			}
			else if (id_producer == '86aeb8584fea3e00203344f18110c795')// Voluntary leave in the context of "start your business"
				
			{
				var error=0;
				if($scope.attachments.length < 1){
					error =1;
					g_form.addErrorMessage($scope.data.msg_attachment);
					
				}
				
				if (!(g_form.getBooleanValue('allow_'))||!(g_form.getBooleanValue('certify_')))   {
					error =1;
					g_form.addErrorMessage($scope.data.msg_submission);
				}
				
				if(error==1){
					return false;
					
				}else g_form.submit();
				
			}
			else if (id_producer == 'af0ce7e94fb41740df11ecd18110c73c') {
				//Relocation allowance
				var error=0;
				if($scope.attachments.length < 1){
					error =1;
					g_form.addErrorMessage($scope.data.msg_attachment);
					
				}else	g_form.submit();
				
			}
			
			else if (id_producer == '541e30854f4c0f00203344f18110c791')// Employment cell (ING Belgique / ING Bank)
				
			{
				var error=0;
				var citizenship = (g_form.getValue('citizenship') == 2 || g_form.getValue('citizenship') == 3);
				if(citizenship){
					if($scope.attachments.length < 1){
						error =1;
						g_form.addErrorMessage($scope.data.msg_attachment);
					}
					
				}
				
				/*if (!(g_form.getBooleanValue('terms_checkbox')))   {
					error =1;
					alert($scope.data.msg_submission);
				}*/
				if(error==1){
					return false;
					
				}
				else g_form.submit();
					
			}
			
			else if (id_producer == 'fce874054f4c0f00203344f18110c7e4')// Holiday declaration
				
			{
				var error=0;
				if(g_form.getBooleanValue('studies') == true && $scope.attachments.length < 1){
					error =1;
					g_form.addErrorMessage($scope.data.msg_attachment);
					
				}
				
				/*	if (!(g_form.getBooleanValue('terms_checkbox')))   {
					error =1;
					alert($scope.data.msg_submission);
				}*/
				
				if(error==1){
					return false;
					
				}else g_form.submit();
				
			}
			
			else if (id_producer == 'e390f80e4fde2200203344f18110c7a1')//declaration pregnancy
				{
				var error=0;
				if($scope.attachments.length < 1){
					error =1;
					g_form.addErrorMessage($scope.data.msg_attachment);
					
				}
				
				if (!(g_form.getBooleanValue('allow_'))||!(g_form.getBooleanValue('certify_')))   {
					error =1;
					g_form.addErrorMessage($scope.data.msg_submission);
				}
				
				if(error==1){
					return false;
					
				}else g_form.submit();
				
			}
			
			else if (id_producer == 'beef4ac94f927a00203344f18110c709')//Request Early Leave
				{
				var error=0;
				
				
				if (!(g_form.getBooleanValue('discussed_with_manager'))||!(g_form.getBooleanValue('allow_'))||!(g_form.getBooleanValue('certify_')))   {
					error =1;
					g_form.addErrorMessage($scope.data.msg_submission);
				}
				
				if(error==1){
					return false;
					
				} else g_form.submit();
				
			}
			else if (id_producer == '947398cb4fa3b600203344f18110c793')//Departure for the purpose of soliciting employment with an independent ING branch
				{
				var error=0;
				
				
				if (!(g_form.getBooleanValue('agree_offboarding'))||!(g_form.getBooleanValue('allow_'))||!(g_form.getBooleanValue('certify_')))   {
					error =1;
					g_form.addErrorMessage($scope.data.msg_submission);
				}
				
				if(error==1){
					return false;
					
				} else g_form.submit();
				
			}
			
			else if (id_producer == '3d0df4064f3a3200df11ecd18110c7d9')//Request to add peers
				{
				var error=0;
				
				
				if (!(g_form.getBooleanValue('allow_'))||!(g_form.getBooleanValue('certify_')))   {
					error =1;
					g_form.addErrorMessage($scope.data.msg_submission);
				}
				
				if(error==1){
					return false;
					
				}else g_form.submit();
				
			}
			
			
			else if(id_producer == '104b28b54fd36200203344f18110c79b'){
				//Request for Adoption Allowance
				var chk=0;
				g_form.getReference('opened_for',  function(refRAA) {
					if (refRAA.gender=="Female"){
						if (!(g_form.getBooleanValue('allow_'))||!(g_form.getBooleanValue('certify_'))||!(g_form.getBooleanValue('awareness_')))   {
							chk=2;
						}
						
					}
					else{
						if (!(g_form.getBooleanValue('allow_'))||!(g_form.getBooleanValue('certify_')))   {
							chk=1;
						}
						
					}
					
					if (chk==2){
						g_form.addErrorMessage($scope.data.msg_LT_confirmation);
						return false;
					}
					else if (chk==1){
						g_form.addErrorMessage($scope.data.msg_LT_confirmation);
						return false;
					}
					else{
						g_form.submit();
					}
					
				});
			}
			
			
			else if(id_producer == '8954c1714f176200203344f18110c706'){
				//Foreseen birth - Birth Allowance
				var chk=0;
				g_form.getReference('opened_for',  function(refFAA) {
					if (refFAA.gender=="Female"){
						if (!(g_form.getBooleanValue('allow_'))||!(g_form.getBooleanValue('certify_'))||!(g_form.getBooleanValue('awareness_')))   {
							chk=2;
						}
						
					}
					else{
						if (!(g_form.getBooleanValue('allow_'))||!(g_form.getBooleanValue('certify_')))   {
							chk=1;
						}
						
					}
					
					if (chk==2){
						g_form.addErrorMessage($scope.data.msg_LT_confirmation);
						return false;
					}
					else if (chk==1){
						g_form.addErrorMessage($scope.data.msg_submission);
						return false;
					}
					else{
						g_form.submit();
					}
					
				});
			}
			
			else if (id_producer == 'c4dd263f4f5ea200203344f18110c72d')//Health fund
				{
				var error=0;
				var violation=0;
				
				if($scope.attachments.length < 1){
					error =1;
					g_form.addErrorMessage($scope.data.msg_attachment);
					return false;
				}
				
				if (!(g_form.getBooleanValue('doc1_'))&&!(g_form.getBooleanValue('doc2_'))&&!(g_form.getBooleanValue('doc3_')))   {
					g_form.addErrorMessage($scope.data.msg_submission_2);
					violation = 1;
					return false;
				}
				
				if (!(g_form.getBooleanValue('allow_'))||!(g_form.getBooleanValue('certify_')))   {
					violation  =1;
					g_form.addErrorMessage($scope.data.msg_submission);
					return false;
				}
				
				if(error==0 && violation==0){
					g_form.submit();
					
				}
				
			}
			
			else if (id_producer == '736803ea4fba2600203344f18110c71e')//Request Telework
				{
				if (!(g_form.getBooleanValue('allow_'))||!(g_form.getBooleanValue('certify_')))   {
					g_form.addErrorMessage($scope.data.msg_submission);
					return false;
				}else g_form.submit();
				
				
			}
			else if (id_producer == '1d00cd714f6c7640df11ecd18110c7b7')//Request for jobstudents (summer)
				{
				if (!(g_form.getBooleanValue('allow_'))||!(g_form.getBooleanValue('certify_')))   {
					g_form.addErrorMessage($scope.data.msg_submission);
					return false;
				}else g_form.submit();
				
				
			}
			
			
			else if (id_producer == '5460cb324f9e6200203344f18110c728')//Change legal situation
				{
				var error=0;
				var cpt=1;
				
				if (((g_form.getValue('change_type')==1)||(g_form.getValue('change_type')==2))&&(g_form.getValue('partner_children')=="Yes") ){
					
					cpt=2;
					
				}
				/*else if (g_form.getValue('change_type')==1 && g_form.getValue('partner_children')=="No"){
					cpt=1;
				}*/
				
				if($scope.attachments.length < cpt){
					error =1;
					g_form.addErrorMessage($scope.data.msg_attachment);
					return false;
				}
				
				if (!(g_form.getBooleanValue('allow_'))||!(g_form.getBooleanValue('certify_'))||!(g_form.getBooleanValue('check_self_service_')))   {
					error  =1;
					g_form.addErrorMessage($scope.data.msg_MPT_confirmation);
					return false;
				}
				
				if(error==0){
					g_form.submit();
					
				}
				
			}
			
			
			
			else if (id_producer == '6a34b48e4fde2200203344f18110c716')// notice  pregnancy leave
				{
				var error=0;
				if($scope.attachments.length < 1){
					error =1;
					g_form.addErrorMessage($scope.data.msg_attachment);
				}
				
				if (!(g_form.getBooleanValue('allow_'))||!(g_form.getBooleanValue('certify_')))   {
					error =1;
					g_form.addErrorMessage($scope.data.msg_submission);
				}
				
				if(error==1){
					return false;
				}else g_form.submit();
				
			}
			
			else if(id_producer=='c9efa3294f5a2200df11ecd18110c70e')//Request visit control doctor
				{
				if (!(g_form.getBooleanValue('allow_'))||!(g_form.getBooleanValue('certify_')))   {
					g_form.addErrorMessage($scope.data.msg_submission);
					return false;
				}else g_form.submit();
			}
			
			
			
			else if(id_producer == 'ae7a27d84ffb1200203344f18110c7ca'){
				//Mobility center
				//Hide field messages
				g_form.hideAllFieldMsgs('error');
				
				//Read variables
				var commonVariables = 'consultation_HR,advice_presented,response_partners,'
				+ 'losing_job,deviation_agreement,FTE_reduction,communication_no_function,'
				+ 'not_replaced,leave_confirmed,time_credit_confirmed,availability,'
				+ 'labour_agreement,discuss_integration,reinstatement,unemployment,unemployment2'; //employee_protected,
				var violation = 0;
				
				//Separate variables
				commonVariables = commonVariables.split(',');
				
				
				//Check all Yes/No variables in the array and reset to default
				//NO alert
				for(x=0;x<commonVariables.length-2;x++){
					if ((g_form.getValue(commonVariables[x]) == 'No')){
						g_form.showFieldMsg(commonVariables[x],$scope.data.msg_MC_error,'error');
						violation = 1;
					}
					else g_form.hideFieldMsg(commonVariables[x],true);
						
				}
				
				if ((g_form.getValue('underperformance') == 'Yes')){
					g_form.showFieldMsg('underperformance',$scope.data.msg_MC_error,'error');
					violation = 1;
				}
				else g_form.hideFieldMsg('underperformance',true);
					
				if ((g_form.getValue('underperformance2') == 'Yes')){
					g_form.showFieldMsg('underperformance2',$scope.data.msg_MC_error,'error');
					violation = 1;
				}
				else g_form.hideFieldMsg('underperformance2',true);
					
				if (!(g_form.getBooleanValue('allow_'))||!(g_form.getBooleanValue('certify_'))){
					g_form.addErrorMessage($scope.data.msg_submission);
					violaton = 1;
				}
				
				
				if (violation) return false;
					else g_form.submit();
					
			}
			/*else if(id_producer == 'eaa642df4f7bd200c7acf1728110c7d4'){
				//Onboarding coaching
				if (!(g_form.getBooleanValue('declaration_')))   {
					alert($scope.data.msg_OC_declaration);
					return false;
				}
				else if (!(g_form.getBooleanValue('allow_'))||!(g_form.getBooleanValue('certify_'))){
					alert($scope.data.msg_submission);
					return false;
				}
				else g_form.submit();
				}*/
			
			else if(id_producer == 'f973174e4fd91240203344f18110c7d9')//Vacancy Request
				{
				var VRcheck=0;
				var error=0;
				
				if(g_form.getValue('type_employee')=="senior_manager"){
					
					
					
					if (!(g_form.getBooleanValue('validated_by_exco_hierarchy_'))||!(g_form.getBooleanValue('manager_foreseen_budget_'))||!(g_form.getBooleanValue('collaboration_will_be_ensured_')))   {
						g_form.addErrorMessage($scope.data.msg_LT_confirmation);
						VRcheck=1;
					}
					
					
					
					
				}
				
				else if(g_form.getValue('type_employee')=="JCF"){
					
					if (!(g_form.getBooleanValue('validated_by_my_senior_management_'))||!(g_form.getBooleanValue('necessary_budget_to_fill_this_vacancy_'))||!(g_form.getBooleanValue('free_up_the_necessary_time_required_')))   {
						g_form.addErrorMessage($scope.data.msg_LT_confirmation);
						VRcheck=1;
					}
					
					
				}
				
				else if(g_form.getValue('type_employee')=="Internship"){
					
					if (!(g_form.getBooleanValue('internship_chkbx_')))   {
						
						g_form.addErrorMessage($scope.data.msg_OC_declaration);
						VRcheck=1;
					}
					
					
				}
				if($scope.attachments.length < 1){
					error = 1;
					g_form.addErrorMessage($scope.data.msg_attachment);
					return false;
				}					
				
				if(VRcheck==0&&error==0)
					{
					
					g_form.submit();
				}
				else {return false;}
					
			}
			
			
			else if(id_producer == 'ef22ff504fbb1200c7acf1728110c793'){
				//Medical examination
				if (!(g_form.getBooleanValue('allow_'))||!(g_form.getBooleanValue('certify_')))   {
					g_form.addErrorMessage($scope.data.msg_submission);
					return false;
				}
				
				else {
					g_form.addErrorMessage($scope.data.msg_ME_submission);
					g_form.submit();
					
				}
			}
			
			else if(id_producer == 'da8a2f1b4fc72600203344f18110c7bb'){
				//Request Transfer Employee
				if (!(g_form.getBooleanValue('allow_'))||!(g_form.getBooleanValue('certify_')))   {
					g_form.addErrorMessage($scope.data.msg_submission);
					return false;
				}else g_form.submit();
			}
			
			else if(id_producer == 'b2db9fd14fe47640df11ecd18110c73d'){
				//Access to Branch Bank applications (Relation 004)
				
				if (!(g_form.getBooleanValue('allow_'))||!(g_form.getBooleanValue('certify_')))   {
					g_form.addErrorMessage($scope.data.msg_submission);
					return false;
				}else g_form.submit();
			}
			
			
			else if(id_producer == 'f7c43b904fbb1200c7acf1728110c709'){
				var checkerror=0;
				//Employee conditions
				if (g_form.getValue('choice')==1){
					if((g_form.getValue('account')==''&& g_form.getValue('greenbook')=='')||(g_form.getValue('account')=='BE'&& g_form.getValue('greenbook')=='BE')){
						g_form.addErrorMessage($scope.data.msg_Iban_be_account_error);
						checkerror=1;
						return false;
						
					}
				}
				
				
				if((g_form.getValue('account')=='' && g_form.getValue('greenbook')=='BE')||(g_form.getValue('account')=='BE'&& g_form.getValue('greenbook')=='')){
					g_form.addErrorMessage($scope.data.msg_Iban_be_account_error);
					checkerror=1;
					return false;
					
				}
				
				
				
				if (g_form.getValue('choice')==3){
					if((g_form.getValue('account_cancel')==''&& g_form.getValue('greenbook_Cancel')=='')||(g_form.getValue('account_cancel')=='BE'&& g_form.getValue('greenbook_Cancel')=='BE')){
						g_form.addErrorMessage($scope.data.msg_Iban_be_account_error);
						checkerror=1;
						return false;
						
					}
				}
				
				
				
				
				if (g_form.getValue('choice')==3){
					if((g_form.getValue('account_cancel')==''&& g_form.getValue('greenbook_Cancel')=='BE')||(g_form.getValue('account_cancel')=='BE'&& g_form.getValue('greenbook_Cancel')=='')){
						g_form.addErrorMessage($scope.data.msg_Iban_be_account_error);
						checkerror=1;
						return false;
						
					}
				}
				
				
				
				if (!(g_form.getBooleanValue('allow_'))||!(g_form.getBooleanValue('certify_')))   {
					g_form.addErrorMessage($scope.data.msg_submission);
					checkerror=1;
					return false;
				}
				
				else
					{
					
					if (checkerror) return false;
						else
						{
						g_form.submit();
						//alert($scope.data.msg_EMPCOND_submission);
					}
				}
				
				
			}//end employee condition
			
			else if(id_producer == '7185e3194fe47640df11ecd18110c70d'){
				var checkerror=0;
				//Submit a jobstudent application
				var errorAttach=0;
			/*	if($scope.attachments.length < 1){
					errorAttach =1;
					g_form.addErrorMessage($scope.data.msg_attachment);
					return false;
					
				}*/
				
				if((g_form.getValue('bank_account')=='')||(g_form.getValue('bank_account')=='BE')){
					g_form.addErrorMessage($scope.data.msg_Iban_be_account_error);
					checkerror=1;
					return false;
					
				}
				
				
				
				
				if (!(g_form.getBooleanValue('allow_'))||!(g_form.getBooleanValue('certify_')))   {
					g_form.addErrorMessage($scope.data.msg_submission);
					checkerror=1;
					return false;
				}
				
				else
					{
					
					if (checkerror) return false;
						else
						{
						g_form.submit();
						//alert($scope.data.msg_EMPCOND_submission);
					}
				}
				
				
			}//end employee condition
			
			else if(id_producer == 'c4cacf5c4f21e200203344f18110c761') {
				//Public transportation
				//This script checks if confirmations received.
				var violation = 0;
				
				//Option 4
				if ((g_form.getValue('transport_choice')== 4)&&(g_form.getValue('choices_option4')== 1)&&(!(g_form.getBooleanValue('confirm_cancellation_'))))  {
					violation = 1;
					
				}
				
				
				if (violation) {
					g_form.addErrorMessage($scope.data.msg_PT_submission);
					return false;
				}
				else {
					if ( ((g_form.getValue('transport_choice')== 1) && (!(g_form.getBooleanValue('allow_'))||!(g_form.getBooleanValue('certify_'))||!(g_form.getBooleanValue('confirmation_1_')))) || (((g_form.getValue('transport_choice')== 2) || (g_form.getValue('transport_choice')== 3)) && (!(g_form.getBooleanValue('allow_'))||!(g_form.getBooleanValue('certify_'))||!(g_form.getBooleanValue('confirmation_1_'))||!(g_form.getBooleanValue('confirmation_2_'))))  || ((g_form.getValue('transport_choice')== 4) && (!(g_form.getBooleanValue('allow_'))||!(g_form.getBooleanValue('certify_')))) ) {
						g_form.addErrorMessage($scope.data.msg_submission);
						return false;
					}
					
					//Checking if there are attachments
					if ((g_form.getValue('transport_choice')== 2)||(g_form.getValue('transport_choice')== 3)
						||((g_form.getValue('transport_choice')== 4)&&(g_form.getValue('choices_option4')== 2))) {
						if($scope.attachments.length < 1){
							g_form.addErrorMessage($scope.data.msg_attachment);
							return false;
						}
						
					}
					g_form.submit();
				}
				
			}
			else if(id_producer == '453f7c0b4fb7d200203344f18110c70b'){
				//Parking access
				g_form.getReference('opened_for', function(gr){
					if ((g_form.getValue('vehicle_choice')==1)&&(gr.department== 'f194d506372e02000205304643990ef5')){
						g_form.addErrorMessage($scope.data.msg_PA_CWR_submission);
						return false;
					}
					else if (g_form.getValue('business_trips')== 3)  {
						g_form.addErrorMessage($scope.data.msg_PA_limited_use);
						return false;
					}
					else {
						
						//Check confirmation boxes
						if (!(g_form.getBooleanValue('allow_'))||!(g_form.getBooleanValue('certify_')))   {
							g_form.addErrorMessage($scope.data.msg_submission);
							return false;
						}
						
						//Check attachments
						if ((g_form.getValue('car_type')== 1)&&(g_form.getValue('certificate')== 'No')) {
							if($scope.attachments.length < 1){
								g_form.addErrorMessage($scope.data.msg_PA_attachment_parking);
								return false;
							}
						}
						
						if ((g_form.getValue('car_type')== 2)&&(g_form.getValue('access_reason2')== 3)) {
							if($scope.attachments.length < 1){
								g_form.addErrorMessage($scope.data.msg_PA_attachment_medical);
								return false;
							}
						}
						
						g_form.submit();
					}
					
					
				});
				
			}
			else if(id_producer == 'cd0251db4f3bd200c7acf1728110c75d'){
				//Pension request
				var violation = 0;
				if($scope.attachments.length < 1){
					g_form.addErrorMessage($scope.data.msg_PR_attachment);
					violation = 1;
				}
				if (!(g_form.getBooleanValue('allow_'))||!(g_form.getBooleanValue('certify_')))   {
					g_form.addErrorMessage($scope.data.msg_submission);
					violation = 1;
				}
				
				if (violation) return false;
					else g_form.submit();
					
			}
			else if(id_producer == '29e867a64fff9200c7acf1728110c775'){
				//Work accidents
				var violation = 0;
				
				if (!(g_form.getBooleanValue('allow_'))||!(g_form.getBooleanValue('certify_')))   {
					g_form.addErrorMessage($scope.data.msg_submission);
					violation = 1;
				}
				/*
				if($scope.attachments.length < 1 && (g_form.getIntValue('injuries_nature')!=3)){
					
					alert($scope.data.msg_attachment);
					violation = 1;
				}
				
 				*/
				
				if (violation) return false;
					else g_form.submit();
				}
			else if(id_producer == '5fee2b4e4f42b600df11ecd18110c727'){
				//Work accidents Record
				var violation = 0;
				
				if (!(g_form.getBooleanValue('allow_'))||!(g_form.getBooleanValue('certify_')))   {
					g_form.addErrorMessage($scope.data.msg_submission);
					violation = 1;
				}
				/*
				if($scope.attachments.length < 1 && (g_form.getIntValue('injuries_nature')!=3)){
					
					alert($scope.data.msg_attachment);
					violation = 1;
				}
				
 				*/
				
				if (violation) return false;
					else g_form.submit();
				}
			else if(id_producer == '85a9315b4f7bd200c7acf1728110c7c7'){
				//Change beneficiary
				var violation = 0;
				
				if (!(g_form.getBooleanValue('allow_'))||!(g_form.getBooleanValue('certify_')))   {
					g_form.addErrorMessage($scope.data.msg_submission);
					violation = 1;
				}
				
				if($scope.attachments.length < 1){
					g_form.addErrorMessage($scope.data.msg_attachment);
					violation = 1;
				}
				
				if (violation) return false;
					else g_form.submit();
				}
			else if(id_producer == 'b39339164f6dd240203344f18110c794'){//illness
				
			//Set service value
			if (g_form.getValue("absence_type")==1)	g_form.setValue("u_service", 'b8555ee83757c6000205304643990ee9');
				else  if (g_form.getValue("absence_type")==2) g_form.setValue("u_service", '63b496e83757c6000205304643990ea7');
				
			var error = 0;
			
			if (g_form.getValue("absence_type")==1 || g_form.getValue("other_type")==1 || g_form.getValue("other_type")==3 || g_form.getValue("other_type")==4)
				{
				if($scope.attachments.length < 1){
					g_form.addErrorMessage($scope.data.msg_attachment);
					error=1;
					return false;
				}
				else error=0;
				}
			
			//Check confirmation boxes
			if (!(g_form.getBooleanValue('allow_'))||!(g_form.getBooleanValue('certify_')))   {
				g_form.addErrorMessage($scope.data.msg_submission);
				error = 1;
				return false;
			}
			if (error==0)
				g_form.submit();
		}
		else if(id_producer == '8c34b0c84ffd3e00203344f18110c721'){//illness Record
			
		//Set service value
		if (g_form.getValue("absence_type")==1)	g_form.setValue("u_service", 'b8555ee83757c6000205304643990ee9');
			else  if (g_form.getValue("absence_type")==2) g_form.setValue("u_service", '63b496e83757c6000205304643990ea7');
			
		var error = 0;
		
		if($scope.attachments.length < 1){
			g_form.addErrorMessage($scope.data.msg_attachment);
			error=1;
			return false;
		}
		else error=0;
			
		//Check confirmation boxes
		if (!(g_form.getBooleanValue('allow_'))||!(g_form.getBooleanValue('certify_')))   {
			g_form.addErrorMessage($scope.data.msg_submission);
			error = 1;
			return false;
		}
		if (error==0)
			g_form.submit();
	}
	else if(id_producer == '4682b4384f932200203344f18110c7c2'){
		//Request on call
		if (!(g_form.getBooleanValue('allow_'))||!(g_form.getBooleanValue('certify_')))   {
			g_form.addErrorMessage($scope.data.msg_submission);
			return false;
		}else  g_form.submit();
		
	}
	else if(id_producer == 'c86dd0b94f276600203344f18110c72e'){
		//Overtime
		if (!(g_form.getBooleanValue('allow_'))||!(g_form.getBooleanValue('certify_')))   {
			g_form.addErrorMessage($scope.data.msg_submission);
			return false;
		}
		else g_form.submit();
			
	}
	else if(id_producer == 'ef5851ab4faa3240df11ecd18110c743'){
		// Voluntary leave before redeployment
		if (!(g_form.getBooleanValue('allow_'))||!(g_form.getBooleanValue('certify_'))||!(g_form.getBooleanValue('agree_offboarding')))   {
			g_form.addErrorMessage($scope.data.msg_submission);
			return false;
		}
		else g_form.submit();
			
	}
	else if(id_producer == '90a69fbd4f5e2200203344f18110c7f1'){
		//Medical part time
		if (!(g_form.getBooleanValue('allow_'))||!(g_form.getBooleanValue('certify_')))   {
			g_form.addErrorMessage($scope.data.msg_submission);
			return false;
		}
		else g_form.submit();
			
	}else if(id_producer == '17bacb0e4f4e7600203344f18110c70f'){
		//Resignation instructions
		/*if (!(g_form.getBooleanValue('allow_'))||!(g_form.getBooleanValue('certify_')))   {
			alert($scope.data.msg_submission);
			return false;
		}else*/
		
		var error=0;
		if($scope.attachments.length < 1){
			error =1;
			g_form.addErrorMessage($scope.data.msg_attachment);
			
		}else	g_form.submit();
	}
	else if(id_producer == '14389af54fca7600df11ecd18110c7ff'){
		//Resignation request
		/*if (!(g_form.getBooleanValue('allow_'))||!(g_form.getBooleanValue('certify_')))   {
			alert($scope.data.msg_submission);
			return false;
		}else*/
		
		g_form.submit();
		
	}else if(id_producer == 'ac5397024f8e7600203344f18110c7ac'){
		//Resignation approval
		/*if (!(g_form.getBooleanValue('allow_'))||!(g_form.getBooleanValue('certify_')))   {
			alert($scope.data.msg_submission);
			return false;
		}else*/
		g_form.submit();
		
	}else if(id_producer == '2684ac7c4fda3a00203344f18110c762'){
		//Dismissal request
		/*if (!(g_form.getBooleanValue('allow_'))||!(g_form.getBooleanValue('certify_')))   {
			alert($scope.data.msg_submission);
			return false;
		}else*/
		g_form.submit();
		
	}else if(id_producer == '9b81dbc54fa8df00df11ecd18110c72a'){
		//Replacement car submission message
		
		var situation = g_form.getValue('situation');
		
		switch(situation) {
			case '1':
			c.msg_submitModalExtra = $scope.data.replacementCarMsg1;
			break;
			case '2':
			c.msg_submitModalExtra = $scope.data.replacementCarMsg2;
			break;
			case '3':
			c.msg_submitModalExtra = $scope.data.replacementCarMsg3;
			break;
			case '4':
			c.msg_submitModalExtra = $scope.data.replacementCarMsg4;
			break;
			case '5':
			c.msg_submitModalExtra = $scope.data.replacementCarMsg5;
			break;
			case '6':
			if (g_form.getValue('fixCar')==1)
				c.msg_submitModalExtra = $scope.data.replacementCarMsg6;
			else
				c.msg_submitModalExtra = $scope.data.replacementCarMsg7;
			break;
			case '7':
			c.msg_submitModalExtra = $scope.data.replacementCarMsg8;
			break;
			case '8':
			c.msg_submitModalExtra = $scope.data.replacementCarMsg9;
			break;
			
		}
		
		g_form.submit();
		
		
	}else if(id_producer == '624b0e194fa73600203344f18110c72d'){
		//Resignation request for managers
		var error=0;
		if($scope.attachments.length < 1){
			error =1;
			g_form.addErrorMessage($scope.data.msg_attachment);
			
		}else	g_form.submit();
		
		
	}else if(id_producer == '5e15344a4ffcd340203344f18110c72e'){
		//Training cancellation
		
		var training = g_form.getValue('training');
		
		if (training == '2')
			c.htmlMessage = $scope.data.trainingCancellation;
		
		g_form.submit();
		
		
	}else if(id_producer=='5418eb7a4ff85740df11ecd18110c767'){
		//Birth-adoption
		if($scope.attachments.length < 1)
			g_form.addErrorMessage($scope.data.msg_attachment);
		else	g_form.submit();
	}else if (id_producer == '36cb96334f514700df11ecd18110c7bc')//Attachment form
	{
		if($scope.attachments.length < 1){
			g_form.addErrorMessage($scope.data.msg_attachment);
			return false;
		}else
		g_form.submit();
		
	}else if (id_producer == 'c65092474f495b40203344f18110c73e')//Request amendment BUDDY
	{
		if($scope.attachments.length < 1){
			g_form.addErrorMessage($scope.data.msg_attachment);
			return false;
		}else
		g_form.submit();
		
	}
	else g_form.submit();
	
}

};





//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//Loading necessary messages
function loadMessages(){
	var id_producer = g_form.getUniqueValue();
	
	if(id_producer == 'aece069b4f3fd200203344f18110c7eb'){
		//Transfer pension
		g_form.setValue('msg',$scope.data.msg_transfer_pension);
		g_form.setReadOnly('msg',true);
	}
	
	
	else if(id_producer == 'a9cf90f64f991240c7acf1728110c79c'){
		//Set service value
		if (g_form.getValue("choice_type")=='reduce_or_increase_working_hours_permanently')	{g_form.setValue("service", '79e4dee83757c6000205304643990e1c');}
			else  if (g_form.getValue("choice_type")=='change_work_schedule') {g_form.setValue("service", '9b151ee83757c6000205304643990e6e');}
			else  if (g_form.getValue("type_of_leave_of_absence")=='TL - Medical leave') {g_form.setValue("service", '42d4dee83757c6000205304643990e1c');}
			else  if (g_form.getValue("type_of_leave_of_absence")=='TL - Palliative leave') {g_form.setValue("service", '0035dee83757c6000205304643990e39');}
			else  if (g_form.getValue("type_of_leave_of_absence")=='TL - Parental leave') {g_form.setValue("service", '1225dee83757c6000205304643990e1f');}
			else  if (g_form.getValue("type_of_leave_of_absence")=='Unpaid leave') {g_form.setValue("service", '43e9a872db10bac02fcffc75ae96197f');}
			else  {g_form.setValue("service", 'fbc45ee83757c6000205304643990ee5');}
			
		
	}
	
	
	
	
	else if(id_producer == '104b28b54fd36200203344f18110c79b'){
		//Request for Adoption Allowance
		g_form.getReference('opened_for',  function(refRAA) {
			
			var company = refRAA.company;
			var location=refRAA.location;
			
			
			
			
			var province=refRAA.location.name;
			
			g_form.setValue('company',company);
			g_form.setValue('location',location);
			
			
			if (refRAA.gender=="Female"){
				g_form.setDisplay('awareness_',true);
				g_form.setDisplay('reason',true);
				g_form.setMandatory('reason',true);
				
			}
			else{
				
				g_form.setDisplay('awareness_',false);
				g_form.setMandatory('reason',false);
				g_form.setDisplay('reason',false);
			}
		});
		
		
	}
	
	
	else if(id_producer == '8954c1714f176200203344f18110c706'){
		//Foreseen birth - Birth Allowance
		
		g_form.showFieldMsg('expected_date',$scope.data.msg_adoption_info,'info');
		g_form.getReference('opened_for',  function(refFAA) {
			
			var company = refFAA.company;
			var location=refFAA.location;
			
			
			
			
			var province=refFAA.location.name;
			
			g_form.setValue('company',company);
			g_form.setValue('location',location);
			
			
			if (refFAA.gender=="Female"){
				g_form.setDisplay('awareness_',true);
				g_form.setDisplay('reason',true);
				g_form.setMandatory('reason',true);
				
			}
			else{
				
				g_form.setDisplay('awareness_',false);
				g_form.setMandatory('reason',false);
				g_form.setDisplay('reason',false);
			}
		});
		
		
	}
	
	
	/*else if(id_producer == '004d235c4ffb1200203344f18110c763'){
		//Granting reduction
		g_form.setValue('msg1',$scope.data.msg_submit_attach_msg );
		g_form.setReadOnly('msg1',true);
	}*/
	else if(id_producer == 'e390f80e4fde2200203344f18110c7a1'){
		//Pregnancy declaration
		g_form.showFieldMsg('birth_due_date',$scope.data.msg_pregnancy_declaration,'info');
	}
	else if(id_producer == '6a34b48e4fde2200203344f18110c716'){
		//Maternity leave
		g_form.showFieldMsg('date_due_birth',$scope.data.msg_maternity_leave,'info');
	}
	else if(id_producer == '85a9315b4f7bd200c7acf1728110c7c7'){
		//Change beneficee
		g_form.setValue('before_submit_msg',$scope.data.msg_submit_attach);
		g_form.setReadOnly('before_submit_msg',true);
		
		
		g_form.showFieldMsg('opened_for',$scope.data.msg_change_beneficee_info,'info');
		
		//	g_form.setValue('info_msg',$scope.data.msg_change_beneficee_info);
		//g_form.setReadOnly('info_msg',true);
		
		
	}
	else if(id_producer == '072fc3104ffb1200203344f18110c728'){
		//Leadership coaching
		g_form.setValue('msg2',$scope.data.msg_LC_confirmation );
		g_form.setReadOnly('msg2',true);
		
		g_form.setValue('msg1',$scope.data.msg_LC_approval);
		g_form.setReadOnly('msg1',true);
		
	}
	else if(id_producer == 'c4cacf5c4f21e200203344f18110c761'){
		//Public transportation
		g_form.setValue('advise_msg',$scope.data.msg_PT_advice);
		g_form.setReadOnly('advise_msg',true);
		g_form.setDisplay('advise_msg',true);
		
	}
	else if(id_producer == 'ae7a27d84ffb1200203344f18110c7ca'){
		//Mobility center
		
		g_form.setValue('msg1',$scope.data.msg_MC_info);
		g_form.setReadOnly('msg1',true);
		
		g_form.setValue('msg2',$scope.data.msg_MC_HRC);
		g_form.setReadOnly('msg2',true);
	}
	
	else if(id_producer == 'c4dd263f4f5ea200203344f18110c72d'){
		//Health fund
		
		g_form.showFieldMsg('work_again',$scope.data.msg_HF_info,'info');
		g_form.showFieldMsg('fund_name',$scope.data.msg_HF_attachements,'info');
	}
	
	else if(id_producer == 'eaa642df4f7bd200c7acf1728110c7d4'){
		//Onboarding coach
		
		g_form.showFieldMsg('declaration',$scope.data.msg_OC_submission,'info');
		
		//	g_form.setValue('before_submit_msg',$scope.data.msg_OC_submission);
		//g_form.setReadOnly('before_submit_msg',true);
	}
	
	else if(id_producer == '4682b4384f932200203344f18110c7c2'){
		//Request on call
		
		g_form.showFieldMsg('provider_choice',$scope.data.msg_infobox_1,'info');
		g_form.showFieldMsg('opened_for',$scope.data.msg_infobox_2,'info');
	}
	
	else if(id_producer == 'ef22ff504fbb1200c7acf1728110c793'){
		//Medical examination
		g_form.setValue('submit_txt',$scope.data.msg_ME_info);
		g_form.setReadOnly('submit_txt',true);
	}
	else if(id_producer == '29e867a64fff9200c7acf1728110c775'){
		//Work accident
		//alert(g_user_date_time_format);
		g_form.setReadOnly('lease_car_msg',true);
		g_form.setValue('lease_car_msg',$scope.data.msg_WA_lease_car);
		//g_form.showFieldMsg('injuries_nature',$scope.data.msg_WA_lease_car,'info');
		
	}
	else if(id_producer == 'bab1b2004fb71200203344f18110c7e2'){
		//Change fiscal
		g_form.setReadOnly('msg_submit',true);
		g_form.setValue('msg_submit',$scope.data.msg_FC_submit);
	}
	/*
	else if(id_producer == 'b39339164f6dd240203344f18110c794'){
		var msgillness=$scope.data.msg_Illness_msg_attachment;
		g_form.showFieldMsg('end_date_attestation',msgillness,'info');
		
		
	}
 	*/
	
	else if (id_producer == '90a69fbd4f5e2200203344f18110c7f1')//Medical part-time
		{
		var msg_attachment=$scope.data.msg_attachment;
		//	g_form.showFieldMsg('type',msg_attachment,'info');
		
	}
	
	else if(id_producer == 'f7c43b904fbb1200c7acf1728110c709'){
		var employeecondition=$scope.data.msg_EMPCOND_submission;
		g_form.showFieldMsg('choice',employeecondition,'info');
		
		
	}
	
	else if(id_producer == 'c86dd0b94f276600203344f18110c72e') // Overtime
		{
		g_form.setValue('msg_overtime_employees',$scope.data.msg_overtime_employees);
		g_form.setReadOnly('msg_overtime_employees',true);
		g_form.setDisplay('msg_overtime_employees',true);
		
		
	}
	
	
	else if(id_producer == '453f7c0b4fb7d200203344f18110c70b'){
		//Parking access
		g_form.setValue('msg1',$scope.data.msg_PA_advice);
		g_form.setReadOnly('msg1',true);
		g_form.setDisplay('msg1',true);
		
		//g_form.addInfoMessage($scope.data.msg_PA_approval);
		
		g_form.getReference('opened_for',  function(ref) {
			if (ref.department=='f194d506372e02000205304643990ef5'){
				g_form.addInfoMessage($scope.data.msg_PA_CWR);
			}
		});
	}else if (id_producer =='eaa642df4f7bd200c7acf1728110c7d4'){
		//Set employee for onboarding coach
		setEmployee();
		
	}else if (id_producer =='3df87f644f15db40203344f18110c7f8'){
		//Event invitation
		if ($scope.data.event_sys_id){
			g_form.setValue('event',$scope.data.event_sys_id);
			g_form.setReadOnly('event',true);
			g_form.setDisplay('event',true);
		}		
		
	}
	
	
}
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// order / create request
function getOne() {
	setFieldsReadonly();
	$scope.submitted1 = true;
	$scope.submitting = true;
	var t = $scope.data.sc_cat_item;
	t._attachmentGUID = $scope.data._attachmentGUID;
	// calls into SPCatalogForm.getItem()
	$http.post(spUtil.getURL('sc_cat_item'), t).success(function(response) {
		$scope.$emit("$$uiNotification", response.$$uiNotification);
		var a = response.answer;
		var n = a.number;
		
		/*ING asked this to be removed*/
		/*if (n)
		issueMessage(n, a.table, a.sys_id);*/
		
		/*if (n){
			c.server.get({id: a.sys_id.toString(), bool: true}).then(function(r) {
			});
		}*/
		
		if (a){
			$scope.submitted2 = true;
		}else{
			spUtil.addErrorMessage('Something went wrong! Please try again..');
			var timer = setInterval(function(){
				clearInterval(timer);
				window.location.reload();
			},5000);
			
		}
		$scope.submitting = false;
		$scope.submitButtonMsg = "Submitted";
	});
	
}





//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
$scope.pdfButtonAvailable = function(){
	//var id_producer = g_form.sys_id; //getUniqueValue();
	var answer = false;
	//alert(id_producer);
	//if(id_producer == 'aece069b4f3fd200203344f18110c7eb'){answer = true;}//pdf_HR_transfer_pension
		//else if(id_producer == 'bab1b2004fb71200203344f18110c7e2'){answer = true;}//pdf_HR_change_fiscal
	//else if(id_producer == '85a9315b4f7bd200c7acf1728110c7c7'){answer = true;}//pdf_HR_pension_change_beneficee
	//	else if(id_producer == '004d235c4ffb1200203344f18110c763'){answer = true;}//pdf_HR_granting_reduction
		//else if(id_producer == '17bacb0e4f4e7600203344f18110c70f'){answer = true;} //Dismissal request
	
	return answer;
};





//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
$scope.generatePDF = function(){
	
	
	var id_producer = g_form.getUniqueValue();
	
	
	
	// record producer html
	if(id_producer == 'aece069b4f3fd200203344f18110c7eb'){
		//	console.info("transfer type:", g_form.getValue('transfer_type'), g_form.getDisplayValue('transfer_type'));
		pdf_HR_transfer_pension();
		
	}
	else if(id_producer == 'bab1b2004fb71200203344f18110c7e2'){
		pdf_HR_change_fiscal();
	}
	else if(id_producer == '85a9315b4f7bd200c7acf1728110c7c7'){
		pdf_HR_pension_change_beneficee();
	}
	else if(id_producer == '004d235c4ffb1200203344f18110c763'){
		pdf_HR_granting_reduction();
	}
	else if(id_producer == '17bacb0e4f4e7600203344f18110c70f'){
		pdf_HR_granting_reduction();
	}
	else {
		g_form.addErrorMessage('Option not Available for this form');
	}
	
	
	
	
	
	
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	// Functions
	function generatePDFNewTab(template){
		var ga = new GlideAjax('GetHRDocumentTemplate');
		ga.addParam('sysparm_name','setInnerHtmlPortal');
		ga.addParam('sysparm_html',template);
		ga.getXML(parseAnswer);
		
		function parseAnswer(){
			
			var win = window.open('pdf_print_portal.do','_blank');//"width=595,height=842");
			
			win.focus();
			win.print();
			
		}
		
		
	}
	
	function setParamenter(parameter,value){
		this.body = body.replace('{'+parameter+'}', value);
	}
	
	
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	// Transfer pension reserves PDF
	//Functions that build the HTML
	function pdf_HR_transfer_pension(){
		
		//Creating a new object of PDF template
		var ga = new GlideAjax('GetHRDocumentTemplate');
		ga.addParam('sysparm_name','getBody');
		ga.addParam('sysparm_template', 'a7b941ef4f4ce600c7acf1728110c76e');
		ga.getXML(loadTemplate_transfer_pension);
		
		
		
		function loadTemplate_transfer_pension(response){
			this.body = response.responseXML.documentElement.getAttribute("answer");
			//////The template is loaded with the HTML from the server, do the string replacements before you print the PDF////////
			
			
			//Create a variable that will get the system language
			//var language='';
			var msg1a, msg1b,msg2a, msg2b, msg3a, msg3b,msg4a, msg4b;
			var msg1_fr= $scope.data.msg_TP_1fr;
			var msg1_nl= $scope.data.msg_TP_1nl;
			var msg2_fr= $scope.data.msg_TP_2fr;
			var msg2_nl= $scope.data.msg_TP_2nl;
			var msg3_fr= $scope.data.msg_TP_3fr;
			var msg3_nl= $scope.data.msg_TP_3nl;
			var msg4_fr= $scope.data.msg_TP_4fr;
			var msg4_nl= $scope.data.msg_TP_4nl;
			
			
			//Unnecessary ajax call maybe
			//Calling the script include to get the system's language
			/*var gb = new GlideAjax('GetSessionLanguage');
			gb.addParam('sysparm_name','GetSessionLanguage');
			gb.getXMLWait();
			var ajax_answer = gb.getAnswer();*/
			
			/*if ($scope.data.language=="fr"){
				msg1a=msg1_fr ;
				msg2a=msg2_fr ;
				msg1b = "";
				msg2b = "";
				msg3a=msg3_fr ;
				msg4a=msg4_fr ;
				msg3b = "";
				msg4b = "";
			}
			else if ($scope.data.language=="nl"){
				msg1a=msg1_nl ;
				msg2a=msg2_nl ;
				msg1b = "";
				msg2b = "";
				msg3a=msg3_nl ;
				msg4a=msg4_nl ;
				msg3b = "";
				msg4b = "";
			}
			else {
				msg1a=msg1_nl;
				msg2a=msg2_nl;
				msg1b=msg1_fr;
				msg2b=msg2_fr;
				msg3a=msg3_nl;
				msg4a=msg4_nl;
				msg3b=msg3_fr;
				msg4b=msg4_fr;
			}*/
			//Only French
			if ($scope.data.language=="nl"){
				msg1a=msg1_nl ;
				msg2a=msg2_nl ;
				msg1b = "";
				msg2b = "";
				msg3a=msg3_nl ;
				msg4a=msg4_nl ;
				msg3b = "";
				msg4b = "";
			}
			else {
				msg1a=msg1_fr ;
				msg2a=msg2_fr ;
				msg1b = "";
				msg2b = "";
				msg3a=msg3_fr ;
				msg4a=msg4_fr ;
				msg3b = "";
				msg4b = "";
			}
			
			//Getting fields translated from messages table
			//Page 1
			var annexe=$scope.data.msg_TP_annexe;
			var title = $scope.data.msg_TP_title;
			
			
			
			
			var pension_institution = $scope.data.msg_TP_pension_institution;
			var employer = $scope.data.msg_TP_employer;
			var affiliated_person = $scope.data.msg_TP_affiliated_person;
			var first_name = $scope.data.msg_TP_first_name;
			var last_name = $scope.data.msg_TP_last_name;
			var personal_id = $scope.data.msg_TP_personal_id;
			var sex = $scope.data.msg_TP_sex;
			var birth_date = $scope.data.msg_TP_birth_date;
			var date_ING = $scope.data.msg_TP_date_ING;
			var first_name_spouse = $scope.data.msg_TP_first_name_spouse;
			var last_name_spouse = $scope.data.msg_TP_last_name_spouse;
			var previous = $scope.data.msg_TP_previous;
			var new_ = $scope.data.msg_TP_new_;
			var new1_v = $scope.data.msg_TP_new1_v;
			var end_date = $scope.data.msg_TP_end_date;
			var new2_v = $scope.data.msg_TP_new2_v;
			var reference_num = $scope.data.msg_TP_reference_num;
			var employee_signature = $scope.data.msg_TP_employee_signature;
			var Olivier_De_Deckere = $scope.data.msg_TP_Olivier_De_Deckere;
			var for_new_employer = $scope.data.msg_TP_for_new_employer;
			var letter_certify = $scope.data.msg_TP_letter_certify;
			var letter_allow = $scope.data.msg_TP_letter_allow;
			
			//Page 2
			var technical_info_details = $scope.data.msg_TP_technical_info_details;
			var technical_info = $scope.data.msg_TP_technical_info;
			var affiliated = $scope.data.msg_TP_affiliated;
			var previous_employer = $scope.data.msg_TP_previous_employer;
			var new_employer = $scope.data.msg_TP_new_employer;
			var name = $scope.data.msg_TP_name;
			var street_num = $scope.data.msg_TP_street_num;
			var postcode_city = $scope.data.msg_TP_postcode_city;
			var statute = $scope.data.msg_TP_statute;
			var departure_date = $scope.data.msg_TP_departure_date;
			var statute_ING = $scope.data.msg_TP_statute_ING;
			var name_ING = $scope.data.msg_TP_name_ING;
			var street_num_ING = $scope.data.msg_TP_street_num_ING;
			var postcode_city_ING = $scope.data.msg_TP_postcode_city_ING;
			var prev_institution = $scope.data.msg_TP_prev_institution;
			var new_institution = $scope.data.msg_TP_new_institution;
			var name_contact_person = $scope.data.msg_TP_name_contact_person;
			var account_num = $scope.data.msg_TP_account_num;
			var reference = $scope.data.msg_TP_reference;
			var phone_contact_person = $scope.data.msg_TP_phone_contact_person;
			var street_num_ING_pension = $scope.data.msg_TP_street_num_ING_pension;
			var postcode_city_ING_pension = $scope.data.msg_TP_postcode_city_ING_pension;
			var name_contact_person_ING_pension = $scope.data.msg_TP_name_contact_person_ING_pension;
			var phone_contact_person_ING_pension = $scope.data.msg_TP_phone_contact_person_ING_pension;
			var choice = $scope.data.msg_TP_choice;
			
			//Page 3
			var contract_state = $scope.data.msg_TP_contract_state;
			var transfer_pension_contract=$scope.data.msg_TP_transfer_pension_contract;
			var date_reduction = $scope.data.msg_TP_date_reduction;
			var warrant_type = $scope.data.msg_TP_warrant_type;
			var end_date_allow = $scope.data.msg_TP_end_date_allow;
			var end_date_contr = $scope.data.msg_TP_end_date_contr;
			var connection_date_allow = $scope.data.msg_TP_connection_date_allow;
			var connection_date_contr = $scope.data.msg_TP_connection_date_contr;
			var combination = $scope.data.msg_TP_combination;
			var combination_allow = $scope.data.msg_TP_combination_allow;
			var combination_contr = $scope.data.msg_TP_combination_contr;
			var guarantees_life = $scope.data.msg_TP_guarantees_life;
			var allow1993 = $scope.data.msg_TP_allow1993;
			var contr1993 = $scope.data.msg_TP_contr1993;
			var reduct_allow = $scope.data.msg_TP_reduct_allow;
			var reduct_contr = $scope.data.msg_TP_reduct_contr;
			var without_consequence = $scope.data.msg_TP_without_consequence;
			var guarantees_death = $scope.data.msg_TP_guarantees_death;
			var contract_state_after = $scope.data.msg_TP_contract_state_after;
			var newplan_startdate = $scope.data.msg_TP_newplan_startdate;
			
			var technical_details = $scope.data.msg_TP_technical_details;
			var transfer_date = $scope.data.msg_TP_transfer_date;
			var contract1993 = $scope.data.msg_TP_contract1993;
			var reserve_allow = $scope.data.msg_TP_reserve_allow;
			var reserve_contr = $scope.data.msg_TP_reserve_contr;
			var time_reduct = $scope.data.msg_TP_time_reduct;
			
			var not_immediately_acquired = $scope.data.msg_TP_not_immediately_acquired;
			var profit_allow = $scope.data.msg_TP_profit_allow;
			var profit_contr = $scope.data.msg_TP_profit_contr;
			var immediately_acquired = $scope.data.msg_TP_immediately_acquired;
			var total_amount = $scope.data.msg_TP_total_amount;
			var signature_initial = $scope.data.msg_TP_signature_initial;
			var pension_pdf_bottom = $scope.data.msg_TP_pension_pdf_bottom;
			
			//Getting the value of the opened_for
			g_form.getReference('opened_for', parseOpenFor);
			
			function parseOpenFor(gr){
				this.opened_for = gr;
				
				
				
				
				//Creating the body by setting values in parameter to the related HR PDF template
				//Page 1
				setParamenter('annexe',annexe);
				setParamenter('title',title);
				setParamenter('msg1a',msg1a);
				setParamenter('msg2a', msg2a);
				setParamenter('emp_id', this.opened_for.employee_number);
				setParamenter('emp_id', this.opened_for.employee_number);
				
				
				
				//setParamenter('msg1b',msg1b);
				//setParamenter('msg2b', msg2b);
				setParamenter('msg3a',msg3a);
				setParamenter('msg4a', msg4a);
				//setParamenter('msg3b',msg3b);
				//setParamenter('msg4b', msg4b);
				setParamenter('employer', employer);
				setParamenter('affiliated_person',affiliated_person);
				setParamenter('pension_institution', pension_institution);
				setParamenter('first_name_v',this.opened_for.first_name);
				setParamenter('last_name_v',this.opened_for.last_name);
				setParamenter('first_name',first_name);
				setParamenter('last_name',last_name);
				setParamenter('first_name_spouse',first_name_spouse);
				setParamenter('last_name_spouse',last_name_spouse);
				setParamenter('first_name_spouse_v','');
				setParamenter('last_name_spouse_v','');
				setParamenter('personal_id_v',this.opened_for.u_national_id);
				setParamenter('personal_id',personal_id);
				setParamenter('birth_date_v','');
				setParamenter('birth_date',birth_date);
				setParamenter('sex_v',this.opened_for.gender);
				setParamenter('sex',sex);
				setParamenter('date_ING_v',this.opened_for.u_contractstartdate);
				setParamenter('date_ING',date_ING);
				setParamenter('date_ING_v',this.opened_for.u_contractstartdate);
				setParamenter('date_ING',date_ING);
				setParamenter('reference_num',reference_num);
				setParamenter('reference_num',reference_num);
				//setParamenter('reference_num_v','');
				setParamenter('previous', previous);
				setParamenter('previous', previous);
				setParamenter('new_',new_);
				setParamenter('new_',new_);
				setParamenter('new1_v',new1_v);
				setParamenter('new2_v',new2_v);
				setParamenter('end_date',end_date);
				setParamenter('employee_signature', employee_signature);
				setParamenter('Olivier_De_Deckere', Olivier_De_Deckere);
				setParamenter('for_new_employer', for_new_employer);
				setParamenter('letter_certify', letter_certify);
				setParamenter('letter_allow', letter_allow);
				
				
				//Page 2
				setParamenter('annexe',annexe);
				setParamenter('technical_info_details', technical_info_details);
				setParamenter('technical_info', technical_info);
				setParamenter('pension_institution', pension_institution);
				setParamenter('affiliated',affiliated);
				setParamenter('first_name_v',this.opened_for.first_name);
				setParamenter('last_name_v',this.opened_for.last_name);
				setParamenter('first_name',first_name);
				setParamenter('last_name',last_name);
				setParamenter('first_name_spouse',first_name_spouse);
				setParamenter('last_name_spouse',last_name_spouse);
				setParamenter('first_name_spouse_v','');
				setParamenter('last_name_spouse_v','');
				setParamenter('personal_id_v',this.opened_for.employee_number);
				setParamenter('personal_id',personal_id);
				setParamenter('birth_date_v','');
				setParamenter('birth_date',birth_date);
				setParamenter('sex_v',this.opened_for.gender);
				setParamenter('sex',sex);
				setParamenter('date_ING_v',this.opened_for.u_contractstartdate);
				setParamenter('date_ING',date_ING);
				setParamenter('employer', employer);
				setParamenter('previous_employer', previous_employer);
				setParamenter('new_employer', new_employer);
				setParamenter('name', name);
				setParamenter('street_num', street_num);
				setParamenter('postcode_city', postcode_city);
				setParamenter('statute', statute);
				setParamenter('departure_date', departure_date);
				setParamenter('name', name);
				setParamenter('street_num', street_num);
				setParamenter('postcode_city', postcode_city);
				setParamenter('statute', statute);
				setParamenter('departure_date', departure_date);
				setParamenter('name_ING', name_ING);
				setParamenter('street_num_ING', street_num_ING);
				setParamenter('postcode_city_ING', postcode_city_ING);
				setParamenter('statute_ING', statute_ING);
				setParamenter('prev_institution', prev_institution);
				setParamenter('name', name);
				setParamenter('street_num', street_num);
				setParamenter('postcode_city', postcode_city);
				setParamenter('name_contact_person', name_contact_person);
				setParamenter('phone_contact_person', phone_contact_person);
				setParamenter('account_num', account_num);
				setParamenter('reference', reference);
				setParamenter('name', name);
				setParamenter('street_num', street_num);
				setParamenter('postcode_city', postcode_city);
				setParamenter('name_contact_person', name_contact_person);
				setParamenter('phone_contact_person', phone_contact_person);
				setParamenter('account_num', account_num);
				setParamenter('reference', reference);
				setParamenter('new_institution', new_institution);
				setParamenter('new1_v', new1_v);
				setParamenter('street_num_ING_pension', street_num_ING_pension);
				setParamenter('postcode_city_ING_pension', postcode_city_ING_pension);
				setParamenter('name_contact_person_ING_pension', name_contact_person_ING_pension);
				setParamenter('phone_contact_person_ING_pension', phone_contact_person_ING_pension);
				setParamenter('choice', choice);
				
				//Page 3
				setParamenter('pension_pdf_bottom', pension_pdf_bottom);
				setParamenter('transfer_pension_contract', transfer_pension_contract);
				setParamenter('contract_state', contract_state);
				setParamenter('date_reduction', date_reduction);
				setParamenter('warrant_type', warrant_type);
				setParamenter('end_date_allow', end_date_allow);
				setParamenter('end_date_contr', end_date_contr);
				setParamenter('connection_date_allow', connection_date_allow);
				setParamenter('connection_date_contr', connection_date_contr);
				setParamenter('combination', combination);
				setParamenter('combination', combination);
				setParamenter('combination_allow', combination_allow);
				setParamenter('combination_allow', combination_allow);
				setParamenter('combination_allow', combination_allow);
				setParamenter('combination_contr', combination_contr);
				setParamenter('combination_contr', combination_contr);
				
				
				setParamenter('guarantees_life', guarantees_life);
				setParamenter('allow1993', allow1993);
				setParamenter('allow1993', allow1993);
				setParamenter('contr1993', contr1993);
				setParamenter('allow1993', allow1993);
				setParamenter('reduct_allow', reduct_allow);
				setParamenter('reduct_allow', reduct_allow);
				setParamenter('reduct_allow', reduct_allow);
				setParamenter('reduct_contr', reduct_contr);
				setParamenter('without_consequence', without_consequence);
				
				setParamenter('guarantees_death', guarantees_death);
				setParamenter('allow1993', allow1993);
				setParamenter('contr1993', contr1993);
				setParamenter('reduct_allow', reduct_allow);
				setParamenter('reduct_contr', reduct_contr);
				setParamenter('without_consequence', without_consequence);
				
				setParamenter('transfer_pension_contract', transfer_pension_contract);
				setParamenter('contract_state_after', contract_state_after);
				setParamenter('newplan_startdate', newplan_startdate);
				
				setParamenter('technical_details', technical_details);
				setParamenter('transfer_date', transfer_date);
				setParamenter('without_consequence', without_consequence);
				setParamenter('contract1993', contract1993);
				setParamenter('reserve_allow', reserve_allow);
				setParamenter('reserve_contr', reserve_contr);
				
				setParamenter('time_reduct', time_reduct);
				setParamenter('reserve_allow', reserve_allow);
				setParamenter('reserve_contr', reserve_contr);
				
				setParamenter('not_immediately_acquired', not_immediately_acquired);
				setParamenter('profit_allow', profit_allow);
				setParamenter('profit_contr', profit_contr);
				setParamenter('immediately_acquired', immediately_acquired);
				setParamenter('profit_allow', profit_allow);
				setParamenter('profit_contr', profit_contr);
				setParamenter('total_amount', total_amount);
				setParamenter('signature_initial', signature_initial);
				setParamenter('pension_pdf_bottom', pension_pdf_bottom);
				
				//set dependent persons details from webform
				setParamenter('name_pr',g_form.getValue('employer_name'));
				setParamenter('street_num_pr', g_form.getValue('street_num'));
				setParamenter('postcode_city_pr',g_form.getValue('code_city'));
				
				///////////////////////////////////////////////////////////////////////////////////////////
				//getOption doesn't work on mobile - manual workaround with messages
				/*if (g_form.getValue('status')!= 0)
				setParamenter('statute_pr', g_form.getOption('status',g_form.getValue('status')).text);
				else*/
					//setParamenter('statute_pr','');
				
				switch (g_form.getIntValue('status')) {
					case 1:
					setParamenter('statute_pr', $scope.data.msg_TP_status1);
					break;
					case 2:
					setParamenter('statute_pr', $scope.data.msg_TP_status2);
					break;
					default:
					setParamenter('statute_pr','');
				}
				
				///////////////////////////////////////////////////////////////////////////////////////////
				
				setParamenter('departure_date_pr', g_form.getValue('departure_date'));
				///////////////////////////////////////////////////////////////////////////////////////////
				//getOption doesn't work on mobile - manual workaround with messages
				/*if (g_form.getValue('transfer_type')!= 0)
				setParamenter('choice_v', g_form.getOption('transfer_type',g_form.getValue('transfer_type')).text);
				else
					setParamenter('choice_v','');*/
				
				switch (g_form.getIntValue('transfer_type')) {
					case 1:
					setParamenter('choice_v', $scope.data.msg_TP_transfer1);
					break;
					case 2:
					setParamenter('choice_v', $scope.data.msg_TP_transfer2);
					break;
					case 3:
					setParamenter('choice_v', $scope.data.msg_TP_transfer3);
					break;
					case 4:
					setParamenter('choice_v', $scope.data.msg_TP_transfer4);
					break;
					case 5:
					setParamenter('choice_v', $scope.data.msg_TP_transfer5);
					break;
					default:
					setParamenter('choice_v','');
				}
				///////////////////////////////////////////////////////////////////////////////////////////
				
				generatePDFNewTab(this.body);
				
			}
		}
		
		
	}
	
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	// Change fiscal child PDF
	//Functions that build the HTML
	function pdf_HR_change_fiscal(){
		
		if (g_form.getValue('benefit_mortgage')=='Yes'){
			
			// Change fiscal child PDF - Mortgage
			//Creating a new object of PDF template
			var gb = new GlideAjax('GetHRDocumentTemplate');
			gb.addParam('sysparm_name','getBody');
			gb.addParam('sysparm_template','d378d2ee4f28ae00203344f18110c72f');
			gb.getXML(loadTemplate_change_fiscal_mortgage);
			
			function loadTemplate_change_fiscal_mortgage(response){
				this.body = response.responseXML.documentElement.getAttribute("answer");
				//////The template is loaded with the HTML from the server, do the string replacements before you print the PDF////////
				
				//Getting fields translated from messages table
				var title = $scope.data.msg_FCM_title;
				var subtitle = $scope.data.msg_FCM_subtitle;
				var signed = $scope.data.msg_FCM_signed;
				var signed2 = $scope.data.msg_FCM_signed2;
				var signed3 = $scope.data.msg_FCM_signed3;
				var signed4 = $scope.data.msg_FCM_signed4;
				var signed5 = $scope.data.msg_FCM_signed5;
				var name_child = $scope.data.msg_FCM_name_child;
				var birth_date_child = $scope.data.msg_FCM_birth_date_child;
				var relation_child = $scope.data.msg_FCM_relation_child;
				var office = $scope.data.msg_FCM_office;
				var msg = $scope.data.msg_FCM_msg;
				var duplicate_at = $scope.data.msg_FCM_duplicate_at;
				var duplicate_on = $scope.data.msg_FCM_duplicate_on;
				var read_approved = $scope.data.msg_FCM_read_approved;
				var for_approval = $scope.data.msg_FCM_for_approval;
				var signature = $scope.data.msg_FCM_signature;
				
				/////////////////////////////////////////////////////////
				//Change fiscal child
				var title2 = $scope.data.msg_FC_title;
				var child_firstname = $scope.data.msg_FC_child_firstname;
				var child_lastname = $scope.data.msg_FC_child_lastname;
				var change_since = $scope.data.msg_FC_change_since;
				var change_declare = $scope.data.msg_FC_change_declare;
				
				//Get beneficee info from webform
				var c_lastname= g_form.getValue('last_name_child');
				var c_firstname= g_form.getValue('first_name_child');
				var start_date_change= g_form.getValue('start_date_change');
				
				//var change_type= g_form.getOption('change_type',g_form.getValue('change_type'));
				//change_type=change_type.text;
				var change_type_details='';
				/*if(g_form.getValue('change_type')==1){
					change_type_details=g_form.getOption('kind_change_a',g_form.getValue('kind_change_a'));
					change_type_details=change_type_details.text;
				}
				
				else if (g_form.getValue('change_type')==2){
					change_type_details=g_form.getOption('kind_change_b',g_form.getValue('kind_change_b'));
					change_type_details=change_type_details.text;
				}*/
				
				
				var start_date = $scope.data.msg_FC_start_date;
				var end_date = $scope.data.msg_FC_end_date;
				var notify = g_form.getLabel('notify');
				/*var notify_answer=g_form.getOption('notify',g_form.getValue('notify'));
				notify_answer=notify_answer.text;*/
				var inform = $scope.data.msg_FC_inform;
				var date_signature_employee = $scope.data.msg_FC_date_signature_employee;
				var letter_certify = $scope.data.msg_FC_letter_certify;
				var letter_allow = $scope.data.msg_FC_letter_allow;
				/////////////////////////////////////////////////////////
				
				//Getting the value of the opened_for
				g_form.getReference('opened_for', function(gr){
					this.opened_for = gr;
					
				});
				
				//Creating the body by setting values in parameter to the related HR PDF template
				setParamenter('title',title);
				setParamenter('subtitle',subtitle);
				setParamenter('signed',signed);
				setParamenter('signed2',signed2);
				setParamenter('signed3',signed3);
				setParamenter('signed4',signed4);
				setParamenter('signed5',signed5);
				setParamenter('name_child',name_child);
				setParamenter('name_last',this.opened_for.first_name);
				setParamenter('name_first',this.opened_for.last_name);
				setParamenter('personal_id',this.opened_for.employee_number);
				setParamenter('birth_date_child', birth_date_child);
				setParamenter('relation_child', relation_child);
				setParamenter('first_name_spouse',g_form.getValue('first_name_spouse'));
				setParamenter('last_name_spouse',g_form.getValue('last_name_spouse'));
				setParamenter('office_v', g_form.getValue('mortgage_office'));
				/*if (g_form.getValue('spouse')!= 0)
				setParamenter('spouse', g_form.getOption('mortage_label2',g_form.getValue('mortage_label2')).text);
				else*/
					setParamenter('spouse','');
				if (g_form.getBooleanValue('rightfull_claimant')){
					setParamenter('option1',g_form.getLabelOf('rightfull_claimant'));
				}
				else if (g_form.getBooleanValue('not_rightfull_claimant')){
					setParamenter('option1',g_form.getLabelOf('rightfull_claimant'));
				}
				else setParamenter('option1','');
					
				if (g_form.getBooleanValue('benefit_recipient')){
					setParamenter('option2',g_form.getLabelOf('benefit_recipient'));
				}
				else if (g_form.getBooleanValue('not_benefit_recipient')){
					setParamenter('option2',g_form.getLabelOf('not_benefit_recipient'));
				}
				else setParamenter('option2','');
					
				setParamenter('last_name_child',g_form.getValue('last_name_child'));
				setParamenter('first_name_child',g_form.getValue('first_name_child'));
				setParamenter('child_birth_date',g_form.getValue('child_birth_date'));
				setParamenter('office', office);
				setParamenter('msg', msg);
				setParamenter('duplicate_at', duplicate_at);
				setParamenter('duplicate_on', duplicate_on);
				setParamenter('read_approved', read_approved);
				setParamenter('for_approval', for_approval);
				setParamenter('signature', signature);
				
				////////////////////////////////////////////
				//Change fiscal child
				setParamenter('title2',title);
				setParamenter('child_firstname',child_firstname);
				setParamenter('child_lastname',child_lastname);
				setParamenter('c_lastname',c_lastname);
				setParamenter('c_firstname',c_firstname);
				setParamenter('change_since',change_since);
				setParamenter('start_date_change',start_date_change);
				setParamenter('change_declare',change_declare);
				//setParamenter('change_type',change_type);
				setParamenter('change_type_details',change_type_details);
				setParamenter('start_date',start_date);
				setParamenter('end_date',end_date);
				setParamenter('notify',notify);
				/*setParamenter('notify_answer',notify_answer);*/
				setParamenter('inform',inform);
				setParamenter('date_signature_employee',date_signature_employee);
				setParamenter('letter_certify',letter_certify);
				setParamenter('letter_allow',letter_allow);
				
				generatePDFNewTab(this.body);
				
			}
			
			
			
		}
		else {
			//Creating a new object of PDF template
			var ga = new GlideAjax('GetHRDocumentTemplate');
			ga.addParam('sysparm_name','getBody');
			ga.addParam('sysparm_template','3337ba364fc4e600203344f18110c771');
			ga.getXML(loadTemplate_change_fiscal);
			
			function loadTemplate_change_fiscal(response){
				this.body = response.responseXML.documentElement.getAttribute("answer");
				//////The template is loaded with the HTML from the server, do the string replacements before you print the PDF////////
				
				//Getting fields translated from messages table
				var title = $scope.data.msg_FC_title;
				var child_firstname = $scope.data.msg_FC_child_firstname;
				var child_lastname = $scope.data.msg_FC_child_lastname;
				var change_since = $scope.data.msg_FC_change_since;
				var change_declare = $scope.data.msg_FC_change_declare;
				
				//Getting the value of the opened_for
				/*g_form.getReference('opened_for', function(gr){
					
				});*/
				
				//Get beneficee info from webform
				var c_lastname= g_form.getValue('last_name_child');
				var c_firstname= g_form.getValue('first_name_child');
				var start_date_change= g_form.getValue('start_date_change');
				
				//var change_type= g_form.getOption('change_type',g_form.getValue('change_type'));
				//change_type=change_type.text;
				var change_type_details='';
				/*if(g_form.getValue('change_type')==1){
					change_type_details=g_form.getOption('kind_change_a',g_form.getValue('kind_change_a'));
					change_type_details=change_type_details.text;
				}
				
				else if (g_form.getValue('change_type')==2){
					change_type_details=g_form.getOption('kind_change_b',g_form.getValue('kind_change_b'));
					change_type_details=change_type_details.text;
				}*/
				
				
				var start_date = $scope.data.msg_FC_start_date;
				var end_date = $scope.data.msg_FC_end_date;
				var notify = g_form.getLabel('notify');
				/*var notify_answer=g_form.getOption('notify',g_form.getValue('notify'));
				notify_answer=notify_answer.text;*/
				var inform = $scope.data.msg_FC_inform;
				var date_signature_employee = $scope.data.msg_FC_date_signature_employee;
				var letter_certify = $scope.data.msg_FC_letter_certify;
				var letter_allow = $scope.data.msg_FC_letter_allow;
				
				
				setParamenter('title',title);
				setParamenter('child_firstname',child_firstname);
				setParamenter('child_lastname',child_lastname);
				setParamenter('c_lastname',c_lastname);
				setParamenter('c_firstname',c_firstname);
				setParamenter('change_since',change_since);
				setParamenter('start_date_change',start_date_change);
				setParamenter('change_declare',change_declare);
				//setParamenter('change_type',change_type);
				setParamenter('change_type_details',change_type_details);
				setParamenter('start_date',start_date);
				setParamenter('end_date',end_date);
				setParamenter('notify',notify);
				/*setParamenter('notify_answer',notify_answer);*/
				setParamenter('inform',inform);
				setParamenter('date_signature_employee',date_signature_employee);
				setParamenter('letter_certify',letter_certify);
				setParamenter('letter_allow',letter_allow);
				
				generatePDFNewTab(this.body);
			}
			
			
		}
	}
	
	
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	// Pension Change beneficee PDF
	//Functions that build the HTML
	function pdf_HR_pension_change_beneficee(){
		//Creating a new object of PDF template
		var ga = new GlideAjax('GetHRDocumentTemplate');
		ga.addParam('sysparm_name','getBody');
		ga.addParam('sysparm_template', '19316e794f80a600c7acf1728110c76e');
		ga.getXML(loadTemplate_change_beneficee);
		
		function loadTemplate_change_beneficee(response){
			this.body = response.responseXML.documentElement.getAttribute("answer");
			//////The template is loaded with the HTML from the server, do the string replacements before you print the PDF////////
			
			//Getting fields translated from messages table
			var title =  $scope.data.msg_CB_title;
			var sign =  $scope.data.msg_CB_sign;
			var sign_confirm =  $scope.data.msg_CB_sign_confirm;
			var beneficiary_a =  $scope.data.msg_CB_beneficiary_a;
			var beneficiary_b =  $scope.data.msg_CB_beneficiary_b;
			var beneficiary_c =  $scope.data.msg_CB_beneficiary_c;
			var beneficiary_d =  $scope.data.msg_CB_beneficiary_d;
			var beneficiary_e =  $scope.data.msg_CB_beneficiary_e;
			var beneficiary_f =  $scope.data.msg_CB_beneficiary_f;
			var lastname =  $scope.data.msg_CB_lastname;
			var firstname =  $scope.data.msg_CB_firstname;
			var birthdate =  $scope.data.msg_CB_birthdate;
			var national_id =  $scope.data.msg_CB_national_id;
			var street =  $scope.data.msg_CB_street;
			var postal_code =  $scope.data.msg_CB_postal_code;
			var date_signature_employee =  $scope.data.msg_CB_date_signature_employee;
			var letter_certify =  $scope.data.msg_CB_etter_certify;
			var letter_allow =  $scope.data.msg_CB_letter_allow;
			
			
			//Getting the value of the opened_for
			g_form.getReference('opened_for', function(gr){
				this.opened_for = gr;
				
				//Get beneficee info from webform
				var b_lastname= g_form.getValue('last_name');
				var b_firstname= g_form.getValue('first_name');
				var b_birth_date= g_form.getValue('birth_date');
				var b_national_id= g_form.getValue('national_id');
				var b_street= g_form.getValue('street');
				var b_city= g_form.getValue('city');
				
				//Creating the body by setting values in parameter to the related HR PDF template
				setParamenter('title',title);
				setParamenter('sign',sign);
				setParamenter('sign_confirm',sign_confirm);
				setParamenter('beneficiary_a',beneficiary_a);
				setParamenter('lastname',lastname);
				setParamenter('b_lastname',b_lastname);
				setParamenter('firstname',firstname);
				setParamenter('b_firstname',b_firstname);
				setParamenter('birthdate',birthdate);
				setParamenter('b_birth_date',b_birth_date);
				setParamenter('national_id',national_id);
				setParamenter('b_national_id',b_national_id);
				setParamenter('street',street);
				setParamenter('b_street',b_street);
				setParamenter('postal_code',postal_code);
				setParamenter('b_city',b_city);
				
				setParamenter('first_name',this.opened_for.first_name);
				setParamenter('last_name',this.opened_for.last_name);
				setParamenter('beneficiary_b',beneficiary_b);
				//We have to put again the following 6 lines else the vaue is not displayed
				setParamenter('lastname',lastname);
				setParamenter('firstname',firstname);
				setParamenter('birthdate',birthdate);
				setParamenter('national_id',national_id);
				setParamenter('street',street);
				setParamenter('postal_code',postal_code);
				
				setParamenter('beneficiary_c',beneficiary_c);
				setParamenter('lastname',lastname);
				setParamenter('firstname',firstname);
				setParamenter('birthdate',birthdate);
				setParamenter('national_id',national_id);
				setParamenter('street',street);
				setParamenter('postal_code',postal_code);
				
				setParamenter('beneficiary_d',beneficiary_d);
				setParamenter('lastname',lastname);
				setParamenter('firstname',firstname);
				setParamenter('birthdate',birthdate);
				setParamenter('national_id',national_id);
				setParamenter('street',street);
				setParamenter('postal_code',postal_code);
				
				setParamenter('beneficiary_e',beneficiary_e);
				setParamenter('lastname',lastname);
				setParamenter('firstname',firstname);
				setParamenter('birthdate',birthdate);
				setParamenter('national_id',national_id);
				setParamenter('street',street);
				setParamenter('postal_code',postal_code);
				
				setParamenter('beneficiary_f',beneficiary_f);
				
				setParamenter('date_signature_employee',date_signature_employee);
				setParamenter('letter_certify',letter_certify);
				setParamenter('letter_allow',letter_allow);
				
				generatePDFNewTab(this.body);
				
			});
			
			
			
		}
		
		
		
	}
	
	
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	// Declaration granting reduction PDF
	//Functions that build the HTML
	function pdf_HR_granting_reduction(){
		//Creating a new object of PDF template
		var ga = new GlideAjax('GetHRDocumentTemplate');
		ga.addParam('sysparm_name','getBody');
		ga.addParam('sysparm_template','7c3e878f4fc8e600203344f18110c7f5');
		ga.getXML(loadTemplate_granting_reduction);
		
		
		function loadTemplate_granting_reduction(response){
			this.body = response.responseXML.documentElement.getAttribute("answer");
			//////The template is loaded with the HTML from the server, do the string replacements before you print the PDF////////
			
			//Getting fields translated from messages table
			var title = $scope.data.msg_GR_title;
			var subtitle = $scope.data.msg_GR_subtitle;
			var subtitle2 = $scope.data.msg_GR_subtitle2;
			var first_name = $scope.data.msg_GR_first_name;
			var last_name = $scope.data.msg_GR_last_name;
			var personal_id = $scope.data.msg_GR_personal_id;
			var corporate_key = $scope.data.msg_GR_corporate_key;
			var civil_status = $scope.data.msg_GR_civil_status;
			var spouse_employed = $scope.data.msg_GR_spouse_employed;
			var spouse_not_employed = $scope.data.msg_GR_spouse_not_employed;
			var date_signature_employee = $scope.data.msg_GR_date_signature_employee;
			var info_emp = $scope.data.msg_GR_info_emp;
			var info_spouse = $scope.data.msg_GR_info_spouse;
			var name = $scope.data.msg_GR_name;
			var birth_date = $scope.data.msg_GR_birth_date;
			var relation = $scope.data.msg_GR_relation;
			var date_signature = $scope.data.msg_GR_date_signature;
			var summary = $scope.data.msg_GR_summary;
			var dependent_emp_lbl = $scope.data.msg_GR_dependent_emp_lbl;
			var dependent_spouse_lbl = $scope.data.msg_GR_dependent_spouse_lbl;
			var sign1,sign2,sign3;
			var sign = $scope.data.msg_GR_sign;
			
			//Set sign messages depending the request choice
			if (g_form.getValue('declare_change')==1) {
				sign1 = $scope.data.msg_GR_sign1;
				sign2 = $scope.data.msg_GR_sign2;
				sign3 = $scope.data.msg_GR_sign3;
			}
			else if (g_form.getValue('declare_change')==2) {
				sign1 = $scope.data.msg_GR_sign4;
				sign2 = $scope.data.msg_GR_sign5;
				sign3='';
			}
			else {
				sign1='';
				sign2='';
				sign3='';
			}
			
			//Getting the value of the opened_for
			g_form.getReference('opened_for', function(gr){
				this.opened_for = gr;
				
				
				//Creating the body by setting values in parameter to the related HR PDF template
				setParamenter('title',title);
				setParamenter('subtitle',subtitle);
				setParamenter('subtitle2', subtitle2);
				setParamenter('first_name_v',this.opened_for.first_name);
				setParamenter('last_name_v',this.opened_for.last_name);
				setParamenter('first_name_v',this.opened_for.first_name);
				setParamenter('last_name_v',this.opened_for.last_name);
				setParamenter('personal_id_v',this.opened_for.u_national_id);
				setParamenter('corporate_key_v',this.opened_for.u_corporate_key);
				setParamenter('civil_status_v','');
				setParamenter('first_name',first_name);
				setParamenter('last_name',last_name);
				setParamenter('personal_id',personal_id);
				setParamenter('corporate_key',corporate_key);
				setParamenter('civil_status',civil_status);
				setParamenter('date_signature_employee', date_signature_employee);
				setParamenter('info_emp', info_emp);
				setParamenter('info_spouse', info_spouse);
				setParamenter('name', name);
				setParamenter('birth_date', birth_date);
				setParamenter('relation', relation);
				setParamenter('name', name);
				setParamenter('birth_date', birth_date);
				setParamenter('relation', relation);
				setParamenter('date_signature', date_signature);
				setParamenter('date_signature', date_signature);
				setParamenter('summary', summary);
				setParamenter('dependent_emp_lbl', dependent_emp_lbl);
				setParamenter('dependent_spouse_lbl', dependent_spouse_lbl);
				setParamenter('sign', sign);
				setParamenter('sign', sign);
				setParamenter('sign1', sign1);
				setParamenter('sign2', sign2);
				setParamenter('sign3', sign3);
				
				
				//Use name depending the request choice
				if (g_form.getValue('declare_change')==1) {
					setParamenter('first_name_ex',this.opened_for.first_name);
					setParamenter('last_name_ex',this.opened_for.last_name);
				}
				else {
					setParamenter('first_name_ex','');
					setParamenter('last_name_ex','');
				}
				
				if (g_form.getValue('spouse_ING')=='Yes') {	setParamenter('spouse_employed',spouse_employed);}
					else {setParamenter('spouse_employed', '');}
					
				if  (g_form.getValue('spouse_ING')=='No'){ setParamenter('spouse_not_employed',spouse_not_employed);}
					else {setParamenter('spouse_not_employed', '');}
					
				//Check dependent on me and dependent on spouse fields
				if (g_form.getBooleanValue('dependent_me')) {
					setParamenter('dependent_me', $scope.data.msg_GR_dependent_me);
				}
				else setParamenter('dependent_me', '');
					
				
				if (g_form.getBooleanValue('dependent_spouse')){
					setParamenter('dependent_spouse', $scope.data.msg_GR_dependent_spouse);
				}
				else setParamenter('dependent_spouse', '');
					
				//set dependent persons details from webform
				setParamenter('name_emp1',g_form.getValue('name_dependent_1'));
				setParamenter('birth_date1', g_form.getValue('birth_dependent_1'));
				
				
				/*if (g_form.getValue('relation_1')!= 0)
				setParamenter('relation1',g_form.getOption('relation_1',g_form.getValue('relation_1')).text);
				else*/
					setParamenter('relation1','');
				
				setParamenter('name_emp2', g_form.getValue('name_dependent_2'));
				setParamenter('birth_date2', g_form.getValue('birth_dependent_2'));
				/*if (g_form.getValue('relation_2')!= 0)
				setParamenter('relation2',g_form.getOption('relation_2',g_form.getValue('relation_2')).text);
				else */
					setParamenter('relation2','');
				
				setParamenter('name_emp3',g_form.getValue('name_dependent_3'));
				setParamenter('birth_date3', g_form.getValue('birth_dependent_3'));
				/*if (g_form.getValue('relation_3')!= 0)
				setParamenter('relation3',g_form.getOption('relation_3',g_form.getValue('relation_3')).text);
				else */
					setParamenter('relation3','');
				
				setParamenter('name_emp4',g_form.getValue('name_dependent_4'));
				setParamenter('birth_date4', g_form.getValue('birth_dependent_4'));
				/*if (g_form.getValue('relation_4')!= 0)
				setParamenter('relation4',g_form.getOption('relation_4',g_form.getValue('relation_4')).text);
				else*/
					setParamenter('relation4','');
				
				setParamenter('name_emp5',g_form.getValue('name_dependent_5'));
				setParamenter('birth_date5', g_form.getValue('birth_dependent_5'));
				/*if (g_form.getValue('relation_5')!= 0)
				setParamenter('relation5',g_form.getOption('relation_5',g_form.getValue('relation_5')).text);
				else*/
					setParamenter('relation5','');
				
				setParamenter('name_spouse1', g_form.getValue('name_spouse_1'));
				setParamenter('birth_spouse1', g_form.getValue('birth_spouse_1'));
				/*if (g_form.getValue('relation_spouse_1')!= 0)	setParamenter('relation_spouse1',g_form.getOption('relation_spouse_1',g_form.getValue('relation_spouse_1')).text);
				else */
					setParamenter('relation_spouse1','');
				setParamenter('name_spouse2', g_form.getValue('name_spouse_2'));
				setParamenter('birth_spouse2', g_form.getValue('birth_spouse_2'));
				/*if (g_form.getValue('relation_spouse_2')!= 0)	setParamenter('relation_spouse2',g_form.getOption('relation_spouse_2',g_form.getValue('relation_spouse_2')).text);
				else */
					setParamenter('relation_spouse2','');
				
				setParamenter('name_spouse3',g_form.getValue('name_spouse_3'));
				setParamenter('birth_spouse3', g_form.getValue('birth_spouse_3'));
				/*if (g_form.getValue('relation_spouse_3')!= 0)	setParamenter('relation_spouse3',g_form.getOption('relation_spouse_3',g_form.getValue('relation_spouse_3')).text);
				else */
					setParamenter('relation_spouse3','');
				
				setParamenter('name_spouse4',g_form.getValue('name_spouse_4'));
				setParamenter('birth_spouse4', g_form.getValue('birth_spouse_4'));
				/*if (g_form.getValue('relation_spouse_4')!= 0)	setParamenter('relation_spouse4',g_form.getOption('relation_spouse_4',g_form.getValue('relation_spouse_4')).text);
				else */
					setParamenter('relation_spouse4','');
				
				setParamenter('name_spouse5',g_form.getValue('name_spouse_5'));
				setParamenter('birth_spouse5', g_form.getValue('birth_spouse_5'));
				/*if (g_form.getValue('relation_spouse_5')!= 0)	setParamenter('relation_spouse5',g_form.getOption('relation_spouse_5',g_form.getValue('relation_spouse_5')).text);
				else */
					setParamenter('relation_spouse5','');
				
				generatePDFNewTab(this.body);
				
			});
			
			
		}
		
	}
	
	
};



///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


// spModel populates mandatory - hasMandatory is called by the submit button
$scope.hasMandatory = function(mandatory) {
	return mandatory && mandatory.length > 0;
};

// switch catalog items
var unregister = $scope.$on('$sp.list.click', onListClick);
$scope.$on("$destroy", function() {
	unregister();
});

function onListClick(evt, arg) {
	$scope.data.sys_id = arg.sys_id;
	spUtil.update($scope);
}

function setFieldsReadonly(){
	var allFields = g_form.getFieldNames();
	for(var fieldName in allFields){
		g_form.setReadOnly(allFields[fieldName], true);
	}
}


function issueMessage(n, table, sys_id) {
	var page = table == 'sc_request' ? 'sc_request' : 'ticket';
	var t = "${Created} " + n + " - ";
	t += "${track using 'Requests' in the header or}";
	t += ' <a href="?id=' + page + '&table=' + table + '&sys_id=' + sys_id + '">' + "${click here to view}" + '</a>';
	spUtil.addInfoMessage(t);
	
}



function setDefaultFields(){
	var variables = $scope.data.variables;
	for (var i=0;i<variables.length;i++){
		var a = variables[i];
		
		g_form.setValue(a.name,a.value);
		g_form.setReadOnly(a.name,true);
		if (a.name=='opened_for'){
			g_form.setValue('employee',a.value);
			g_form.setReadOnly('employee',true);
		}
		
	}
}

//Onboarding coach: prefill employee
function setEmployee(){
	if ($scope.data.employee)
		g_form.setValue('employee',$scope.data.employee);
}

function setTaskDefinition(){
	g_form.setValue('task_id',$scope.data.task_sys_id);
	g_form.setDisplay('task_id',false);
	g_form.setDisplay('description',false);
}


}]]></client_script>
        <controller_as>c</controller_as>
        <css>.panel-button {&#13;
  float: none;&#13;
}&#13;
.panel {&#13;
  border: none;&#13;
}&#13;
&#13;
.p-t-none {&#13;
  padding-top: 0 !important;&#13;
}&#13;
&#13;
.file-list-wrap {&#13;
	margin-bottom: 10px;&#13;
}&#13;
&#13;
.view-attachment {&#13;
display: none;&#13;
}&#13;
&#13;
.kb-type {&#13;
 margin-left: -500px;&#13;
background-image: linear-gradient(180deg, hsla(0, 0%, 70%, .09), hsla(0, 0%, 70%, .09));    border-top-right-radius: 20px;&#13;
    width: 400px;&#13;
    height: 60px;&#13;
    border-bottom-right-radius: 20px;&#13;
  float: left;&#13;
}&#13;
&#13;
.type-title{&#13;
     font-size: 24px;&#13;
    font-weight: 400;&#13;
    margin-left: 280px;&#13;
    /* margin-top: 0px; */&#13;
    padding-top: 4px;&#13;
}&#13;
&#13;
.header-title{&#13;
  color: black;&#13;
  padding-top: 9px;&#13;
  margin-left: -400px;&#13;
  padding-left: 280px;&#13;
  width: 350px;&#13;
 // border: 1px solid;&#13;
  border-top-right-radius : 12px;&#13;
  border-bottom-right-radius : 12px;&#13;
  height: 40px;&#13;
  &#13;
  &#13;
  background-image: linear-gradient(180deg, hsla(0, 0%, 70%, .09), hsla(0, 0%, 70%, .09));&#13;
}&#13;
&#13;
.tag {&#13;
  background-color: #ec6b2e;&#13;
  border-radius: 2px;&#13;
  border : solid 1px transparent;&#13;
  width: 100px;&#13;
  text-align: center;&#13;
  float: left;&#13;
    margin-right: 1%;&#13;
}&#13;
.tag-text {  &#13;
  color:white;&#13;
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list>color</field_list>
        <has_preview>true</has_preview>
        <id>hr-catalog-item</id>
        <internal>false</internal>
        <link/>
        <name>HR catalog item</name>
        <option_schema>[{"name":"sys_id","label":"Sys ID","type":"string"}]</option_schema>
        <public>false</public>
        <roles/>
        <script><![CDATA[// populate the 'data' variable with catalog item, variables, and variable view
(function(input) {
	//Check task definition
	data.task_sys_id = $sp.getParameter("task_sys_id");
	var language = gs.getUser().getLanguage();
	//Add event invitations parameter
	if ($sp.getParameter("event_sys_id"))
	data.event_sys_id = $sp.getParameter("event_sys_id").toString();
	
	if (data.task_sys_id){
		var taskRec = $sp.getRecord('task',data.task_sys_id);
		data.taskType = taskRec.u_block_task_ref.getDisplayValue();
		if (taskRec.u_block_task_ref.u_form !='')
			data.sys_id = taskRec.u_block_task_ref.u_form.sys_id;
		
		//Check if task closed
		var library = new LetItSnowSPUtils();
		library.checkStatus(data.task_sys_id);
		
		//Set defaults
		if (data.taskClosed) getDefaults(data.task_sys_id,data.sys_id);
		}else{
		if (input)
			data.sys_id = input.sys_id;
		else if (options.sys_id)
			data.sys_id = options.sys_id;
		else
			data.sys_id = $sp.getParameter("sys_id") || $sp.getParameter('sl_sys_id');
	}
	
	data._attachmentGUID = gs.generateGUID();
	// portal can specify a catalog home page
	data.sc_catalog_page = $sp.getDisplayValue("sc_catalog_page") || "sc_home";
	var validatedItem = new GlideappCatalogItem.get(data.sys_id);
	if (!validatedItem.canView())
		return;
	
	data.sc_cat_item = $sp.getCatalogItem(data.sys_id);
	if (data.sc_cat_item.category) {
		var categoryGR = new GlideRecord('sc_category');
		categoryGR.get(data.sc_cat_item.category);
		data.category = {
			name: categoryGR.getDisplayValue('title'),
			url: '?id=sc_category&sys_id=' + categoryGR.sys_id
		};
	}
	
	// Tags Load
	data.tags = [];
	data.tag= '';
	var loadtags = new GlideRecord('sc_cat_item_producer');
	loadtags.addQuery('sys_id', data.sys_id);
	loadtags.query();
	
	while (loadtags.next()){
		Loadtags();
	}
	
	function Loadtags(){
		var split = loadtags.u_tags.split(',');
		for (var i = 0; i<split.length; i++){
		var tags = new GlideRecord('u_tags_portal');
		tags.addQuery('sys_id' ,split[i]);
		tags.query();
		
		while (tags.next()){
			
			if (language== 'en'){
				data.tags.push(tags.u_tag_name_en.toString());
			}
			if (language== 'fr'){
				data.tags.push(tags.u_tag_name_fr.toString());
			}
			if (language== 'nl'){
				data.tags.push(tags.u_tag_name_nl.toString());
			}	
		}
	}
}
	
	/*if(input){
		gs.addInfoMessage('This fires!');
		gs.addInfoMessage(input.taskID);
		updateStatus(input.taskID);
	}*/
	
	////////////////////////////////////////////////////////////////////////////////////
	//All the necessary messages
	//Common messages
	data.submitButtonMsg = gs.getMessage('Submit');
	data.msg_submission = gs.getMessage('confirmation_checkboxes');
	data.msg_attachment = gs.getMessage('attachment_mandatory_translated');
	data.msg_submit_attach = gs.getMessage('ing_submit_attach_msg');
	data.msg_submitModal=gs.getMessage('Thank you, your request has been submitted');
	data.msg_submitModalExtra = '';
	if (data.sys_id=='7185e3194fe47640df11ecd18110c70d') data.msg_submitModal=gs.getMessage('jobstudentMessage');
		else if (data.sys_id=='3df87f644f15db40203344f18110c7f8')
		data.msg_submitModal=gs.getMessage('inscriptionSubmission');
	////////////////////////////////////////////////////////////////////////////////////
	//Adoption foreseen
	data.msg_adoption_info = gs.getMessage('adoption info');
	
	////////////////////////////////////////////////////////////////////////////////////
	//Pregnancy declaration
	data.msg_pregnancy_declaration = gs.getMessage('ing_pregnacy_info');
	
	////////////////////////////////////////////////////////////////////////////////////
	//Maternity leave
	data.msg_maternity_leave = gs.getMessage('ing_maternity_leave_info');
	
	////////////////////////////////////////////////////////////////////////////////////
	//Transfer pension
	data.msg_transfer_pension = gs.getMessage('ing_transfer_pension_reserves_msg');
	
	//Transfer pension - PDF
	data.language = gs.getSession().getLanguage();
	data.msg_TP_1fr = gs.getMessage('transfer_pension_msg1_fr');
	data.msg_TP_1nl = gs.getMessage('transfer_pension_msg1_nl');
	data.msg_TP_2fr = gs.getMessage('transfer_pension_msg2_fr');
	data.msg_TP_2nl = gs.getMessage('transfer_pension_msg2_nl');
	data.msg_TP_3fr = gs.getMessage('transfer_pension_msg3_fr');
	data.msg_TP_3nl = gs.getMessage('transfer_pension_msg3_nl');
	data.msg_TP_4fr = gs.getMessage('transfer_pension_msg4_fr');
	data.msg_TP_4nl = gs.getMessage('transfer_pension_msg4_nl');
	
	//Page 1re
	
	
	data.msg_TP_annexe = gs.getMessage('annexe') ;
	data.msg_TP_title = gs.getMessage('transfer_pension_document') ;
	data.msg_TP_pension_institution = gs.getMessage('pension_institution');
	data.msg_TP_employer = gs.getMessage('employer');
	data.msg_TP_affiliated_person = gs.getMessage('affiliated_person');
	data.msg_TP_first_name = gs.getMessage('pension_first_name');
	data.msg_TP_last_name = gs.getMessage('pension_last_name');
	data.msg_TP_personal_id = gs.getMessage('personal_id');
	data.msg_TP_sex = gs.getMessage('pension_sex');
	data.msg_TP_birth_date = gs.getMessage('pension_birth');
	data.msg_TP_date_ING = gs.getMessage('transfer_pension_date_ING');
	data.msg_TP_first_name_spouse = gs.getMessage('first_name_spouse');
	data.msg_TP_last_name_spouse = gs.getMessage('last_name_spouse');
	data.msg_TP_previous = gs.getMessage('pension_previous');
	data.msg_TP_new_= gs.getMessage('pension_new');
	data.msg_TP_new1_v = gs.getMessage('ing_pension_institution');
	data.msg_TP_end_date = gs.getMessage('pension_enddate');
	data.msg_TP_new2_v = gs.getMessage('ing_name');
	data.msg_TP_reference_num = gs.getMessage('reference_number');
	data.msg_TP_employee_signature = gs.getMessage('employee_sign');
	data.msg_TP_Olivier_De_Deckere = gs.getMessage('Olivie_De_Deckère');
	data.msg_TP_for_new_employer = gs.getMessage('for_new_employer');
	data.msg_TP_letter_certify = gs.getMessage('pension_certify');
	data.msg_TP_letter_allow = gs.getMessage('pension_allow');
	
	//Page 2
	data.msg_TP_technical_info_details = gs.getMessage('transfer_pension_technical_info');
	data.msg_TP_technical_info = gs.getMessage('technical_info');
	data.msg_TP_affiliated = gs.getMessage('affiliated');
	data.msg_TP_previous_employer = gs.getMessage('previous_employer');
	data.msg_TP_new_employer = gs.getMessage('new_employer');
	data.msg_TP_name = gs.getMessage('pension_name_forme_juridique');
	//data.msg_TP_forme_juridique = gs.getMessage('forme_juridique');
	data.msg_TP_street_num = gs.getMessage('pension_pdf_address');
	data.msg_TP_postcode_city = gs.getMessage('pension_pdf_place');
	data.msg_TP_statute = gs.getMessage('statute_affiliated_person');
	data.msg_TP_departure_date = gs.getMessage('date_departure_affiliated');
	data.msg_TP_statute_ING = gs.getMessage('salaried');
	data.msg_TP_name_ING = gs.getMessage('ing_name');
	data.msg_TP_street_num_ING = gs.getMessage('ing_street_n');
	data.msg_TP_postcode_city_ING = gs.getMessage('ing_postcode_city');
	data.msg_TP_prev_institution = gs.getMessage('previous_pension_institution');
	data.msg_TP_new_institution = gs.getMessage('new_pension_institution');
	data.msg_TP_name_contact_person = gs.getMessage('name_contact_person');
	data.msg_TP_account_num = gs.getMessage('account_number');
	data.msg_TP_reference = gs.getMessage('pension_reference');
	data.msg_TP_phone_contact_person = gs.getMessage('phone_contact_person');
	data.msg_TP_street_num_ING_pension = gs.getMessage('ing_pension_address');
	data.msg_TP_postcode_city_ING_pension = gs.getMessage('ing_pension_postcode_city');
	data.msg_TP_name_contact_person_ING_pension = gs.getMessage('De_Schrijver_Geert');
	data.msg_TP_phone_contact_person_ING_pension = gs.getMessage('pension_institution_phone');
	data.msg_TP_choice = gs.getMessage('pension_choice');
	data.msg_TP_status1 = gs.getMessage('pension_status1');
	data.msg_TP_status2 = gs.getMessage('pension_status2');
	data.msg_TP_transfer1 = gs.getMessage('pension_transfer1');
	data.msg_TP_transfer2 = gs.getMessage('pension_transfer2');
	data.msg_TP_transfer3 = gs.getMessage('pension_transfer3');
	data.msg_TP_transfer4 = gs.getMessage('pension_transfer4');
	data.msg_TP_transfer5 = gs.getMessage('pension_transfer5');
	
	//Page 3
	data.msg_TP_pension_pdf_bottom = gs.getMessage('pension_pdf_bottom');
	data.msg_TP_transfer_pension_contract = gs.getMessage('transfer_pension_contract');
	data.msg_TP_combination = gs.getMessage('transfer_pension_comb');
	data.msg_TP_contract_state = gs.getMessage('transfer_pension_contract_state');
	data.msg_TP_date_reduction = gs.getMessage('transfer_pension_date_reduct');
	data.msg_TP_warrant_type = gs.getMessage('transfer_pension_warrant');
	data.msg_TP_end_date_allow = gs.getMessage('transfer_pension_ed_allowance');
	data.msg_TP_end_date_contr = gs.getMessage('transfer_pension_ed_contribution');
	data.msg_TP_connection_date_allow = gs.getMessage('transfer_pension_cd_allowance');
	data.msg_TP_connection_date_contr = gs.getMessage('transfer_pension_cd_contribution');
	data.msg_TP_combination_allow = gs.getMessage('transfer_pension_comb_allow');
	data.msg_TP_combination_contr = gs.getMessage('transfer_pension_comb_contr');
	data.msg_TP_guarantees_life = gs.getMessage('transfer_pension_guarantees_life');
	data.msg_TP_allow1993 = gs.getMessage('transfer_pension_allow1993');
	data.msg_TP_contr1993 = gs.getMessage('transfer_pension_contr1993');
	data.msg_TP_reduct_allow = gs.getMessage('transfer_pension_reduct_allow');
	data.msg_TP_reduct_contr = gs.getMessage('transfer_pension_reduct_contr');
	data.msg_TP_without_consequence = gs.getMessage('without_consequence');
	data.msg_TP_guarantees_death = gs.getMessage('transfer_pension_guarantees_death');
	data.msg_TP_contract_state_after = gs.getMessage('transfer_pension_contract_state_after');
	data.msg_TP_newplan_startdate = gs.getMessage('transfer_pension_newplan_startdate');
	
	data.msg_TP_technical_details = gs.getMessage('transfer_pension_technical_details');
	data.msg_TP_transfer_date = gs.getMessage('transfer_pension_transferdate');
	data.msg_TP_contract1993 = gs.getMessage('transfer_pension_contract1993');
	data.msg_TP_reserve_allow = gs.getMessage('transfer_pension_reserve_allow');
	data.msg_TP_reserve_contr = gs.getMessage('transfer_pension_reserve_contr');
	data.msg_TP_time_reduct = gs.getMessage('transfer_pension_time_reduct');
	
	data.msg_TP_not_immediately_acquired = gs.getMessage('transfer_pension_not_immediately_acquired');
	data.msg_TP_profit_allow = gs.getMessage('transfer_pension_profit_allow');
	data.msg_TP_profit_contr = gs.getMessage('transfer_pension_profit_contr');
	data.msg_TP_immediately_acquired = gs.getMessage('transfer_pension_immediately_acquired');
	data.msg_TP_total_amount = gs.getMessage('transfer_pension_total_amount');
	data.msg_TP_signature_initial = gs.getMessage('transfer_pension_signature_initial');
	data.msg_TP_pension_pdf_bottom = gs.getMessage('pension_pdf_bottom');
	
	
	
	////////////////////////////////////////////////////////////////////////////////////
	//Granting Reduction - PDF
	data.msg_GR_title = gs.getMessage('granting_reduction_document') ;
	data.msg_GR_subtitle = gs.getMessage('grant_reduct_service');
	data.msg_GR_subtitle2 = gs.getMessage('grant_reduct_admin');
	data.msg_GR_first_name = gs.getMessage('First name');
	data.msg_GR_last_name = gs.getMessage('Last name');
	data.msg_GR_personal_id = gs.getMessage('personal_id');
	data.msg_GR_corporate_key = gs.getMessage('corporate_key');
	data.msg_GR_civil_status = gs.getMessage('civil_status');
	data.msg_GR_spouse_employed = gs.getMessage('grant_reduct_spouseING');
	data.msg_GR_spouse_not_employed = gs.getMessage('grant_reduct_spouse_noING');
	data.msg_GR_date_signature_employee = gs.getMessage('Date and signature of the employee');
	data.msg_GR_info_emp = gs.getMessage('grant_reduct_emp');
	data.msg_GR_info_spouse = gs.getMessage('grant_reduct_spouse');
	data.msg_GR_name = gs.getMessage('Name');
	data.msg_GR_birth_date = gs.getMessage('birth_date');
	data.msg_GR_relation = gs.getMessage('grant_reduct_relation');
	data.msg_GR_date_signature = gs.getMessage('date_signature');
	data.msg_GR_summary = gs.getMessage('grant_reduct_summary');
	data.msg_GR_dependent_emp_lbl = gs.getMessage('grant_reduct_dependent');
	data.msg_GR_dependent_spouse_lbl = gs.getMessage('grant_reduct_dependent_spouse');
	data.msg_GR_sign = gs.getMessage('grant_reduct_sign');
	
	data.msg_GR_sign1 = gs.getMessage('grant_reduct_sign_option1');
	data.msg_GR_sign2 = gs.getMessage('grant_reduct_sign_spouse');
	data.msg_GR_sign3 = gs.getMessage('grant_reduct_sign_spouse2');
	
	data.msg_GR_sign4 = gs.getMessage('grant_reduct_sign_option2');
	data.msg_GR_sign5 = gs.getMessage('grant_reduct_sign_spouse_option2');
	data.msg_GR_dependent_me = gs.getMessage('grant_reduct_me_lbl');
	data.msg_GR_dependent_spouse = gs.getMessage('grant_reduct_spouse_lbl');
	
	////////////////////////////////////////////////////////////////////////////////////
	//Change fiscal
	data.msg_FC_submit = gs.getMessage('ing_fiscal_submit') ;
	
	//Change fiscal child PDF
	data.msg_FC_title = gs.getMessage('Change_fiscal_letter') ;
	data.msg_FC_child_firstname = gs.getMessage('Child_first_name') ;
	data.msg_FC_child_lastname = gs.getMessage('Child_last_name') ;
	data.msg_FC_change_since = gs.getMessage('Change_fiscal_letter_Change_since');
	data.msg_FC_change_declare = gs.getMessage('Change_fiscal_letter_Change_declare');
	
	data.msg_FC_start_date = gs.getMessage('Start date');
	data.msg_FC_end_date = gs.getMessage('End date');
	data.msg_FC_inform = gs.getMessage('change fiscal inform letter');
	data.msg_FC_date_signature_employee = gs.getMessage('Date and signature of the employee');
	data.msg_FC_letter_certify = gs.getMessage('letter certify');
	data.msg_FC_letter_allow = gs.getMessage('letter allow');
	
	
	////////////////////////////////////////////////////////////////////////////////////
	//Change fiscal child PDF - mortgage
	data.msg_FCM_title = gs.getMessage('ing_mortgage_credit') ;
	data.msg_FCM_subtitle = gs.getMessage('sworn_statement');
	data.msg_FCM_signed = gs.getMessage('signed');
	data.msg_FCM_signed2 = gs.getMessage('signed2');
	data.msg_FCM_signed3 = gs.getMessage('signed3');
	data.msg_FCM_signed4 = gs.getMessage('signed4');
	data.msg_FCM_signed5 = gs.getMessage('signed5');
	data.msg_FCM_name_child = gs.getMessage('last_first_name_child');
	data.msg_FCM_birth_date_child = gs.getMessage('Date of birth');
	data.msg_FCM_relation_child = gs.getMessage('relation_child');
	data.msg_FCM_office = gs.getMessage('mortgage_office');
	data.msg_FCM_msg = gs.getMessage('mortgage_msg');
	data.msg_FCM_duplicate_at = gs.getMessage('duplicate_at');
	data.msg_FCM_duplicate_on = gs.getMessage('duplicate_on');
	data.msg_FCM_read_approved = gs.getMessage('read_approved');
	data.msg_FCM_for_approval = gs.getMessage('for_approval');
	data.msg_FCM_signature = gs.getMessage('Signature');
	
	////////////////////////////////////////////////////////////////////////////////////
	//Change beneficee
	data.msg_change_beneficee_info = gs.getMessage('ing_beneficiary_info_msg');
	
	//Change beneficee - PDF
	data.msg_CB_title = gs.getMessage('Pensions _beneficiary_letter');
	data.msg_CB_sign = gs.getMessage('I_signed');
	data.msg_CB_sign_confirm = gs.getMessage('I_signed_confirm');
	data.msg_CB_beneficiary_a = gs.getMessage('Beneficiary_a_change_fiscal');
	data.msg_CB_beneficiary_b = gs.getMessage('Beneficiary_b_change_fiscal');
	data.msg_CB_beneficiary_c = gs.getMessage('Beneficiary_c_change_fiscal');
	data.msg_CB_beneficiary_d = gs.getMessage('Beneficiary_d_change_fiscal');
	data.msg_CB_beneficiary_e = gs.getMessage('Beneficiary_e_change_fiscal');
	data.msg_CB_beneficiary_f = gs.getMessage('Beneficiary_f_change_fiscal');
	data.msg_CB_lastname = gs.getMessage('Last name');
	data.msg_CB_firstname = gs.getMessage('First name');
	data.msg_CB_birthdate = gs.getMessage('Date of birth');
	data.msg_CB_national_id = gs.getMessage('National ID');
	data.msg_CB_street = gs.getMessage('street');
	data.msg_CB_postal_code = gs.getMessage('Postal code, city');
	data.msg_CB_date_signature_employee = gs.getMessage('Date and signature of the employee');
	data.msg_CB_etter_certify = gs.getMessage('letter certify');
	data.msg_CB_letter_allow = gs.getMessage('letter allow');
	
	////////////////////////////////////////////////////////////////////////////////////
	//Leadership coaching
	data.msg_LC_confirmation = gs.getMessage('ing_leadership_coaching_agreement_msg');
	data.msg_LC_approval = gs.getMessage('ing_leadership_coaching_manager_msg');
	
	////////////////////////////////////////////////////////////////////////////////////
	//Language training
	data.msg_LT_confirmation = gs.getMessage('confirmation_checkboxes_language_training');
	data.msg_LT_superiors = gs.getMessage('language_training_confirm_superiors');
	data.msg_LT_manager = gs.getMessage('ing_language_training_manager_msg');
	data.msg_LT_immersion = gs.getMessage('ing_language_training_immersion_msg');
	data.msg_LT_approval_info = gs.getMessage('ing_manager_approval_info');
	
	////////////////////////////////////////////////////////////////////////////////////
	//Mobility center
	data.msg_MC_info = gs.getMessage('ing_mobility_center_info');
	data.msg_MC_HRC = gs.getMessage('ing_mobility_center_HRC_msg');
	data.msg_MC_error = gs.getMessage('ing_mobility_center_error_msg');
	
	////////////////////////////////////////////////////////////////////////////////////
	//Onboarding coach
	data.msg_OC_declaration = gs.getMessage('confirmation_checkboxes_onboarding_coach');
	data.msg_OC_submission = gs.getMessage('registration_onboarding_coach_before_submit_msg');
	
	////////////////////////////////////////////////////////////////////////////////////
	//Medical examination
	data.msg_ME_info = gs.getMessage('ing_Request_for_medical_examination_info');
	data.msg_ME_submission = gs.getMessage('medical_examination_after_submit');
	
	////////////////////////////////////////////////////////////////////////////////////
	//Public transportation
	data.msg_PT_advice = gs.getMessage('ing_general_advice');
	data.msg_PT_submission = gs.getMessage('ing_agreement_terms');
	
	////////////////////////////////////////////////////////////////////////////////////
	//Parking access
	data.msg_PA_advice = gs.getMessage('ing_general_advice');
	data.msg_PA_approval = gs.getMessage('ing_parking_approval_msg');
	data.msg_PA_CWR = gs.getMessage('ing_parking_CWR_msg');
	data.msg_PA_CWR_submission = gs.getMessage('ing_no_access_CWR_msg');
	data.msg_PA_limited_use = gs.getMessage('ing_parking_limited_use_msg');
	data.msg_PA_attachment_parking = gs.getMessage('ing_parking_certificate_msg');
	data.msg_PA_attachment_medical = gs.getMessage('ing_parking_medical_msg');
	
	////////////////////////////////////////////////////////////////////////////////////
	//Pension request
	data.msg_PR_attachment = gs.getMessage('pension_request_attachment_error');
	
	////////////////////////////////////////////////////////////////////////////////////
	//work_Accident
	data.msg_WA_lease_car= gs.getMessage('work_accident_lease_car');
	
	/////////////
	/////////// Health fund
	data.msg_HF_attachements= gs.getMessage('Please attach your health fund document(s)');
	data.msg_HF_info= gs.getMessage('Labour resumptioncards can only be sent in case when you have actually started working again.');
	data.msg_submission_2=gs.getMessage("health_fund_checkbox");
	//Medical part-time
	
	data.msg_MPT_certificate= gs.getMessage('MPT_certificate');
	data.msg_MPT_confirmation= gs.getMessage('MPT_confirmation_checkboxes');
	//Employee conditions table
	data.msg_Iban_be_error = gs.getMessage('Iban_be_error');
	data.msg_Iban_be_account_error = gs.getMessage('Iban_be_account_error');
	data.msg_EMPCOND_submission=gs.getMessage('emp_cond_submit');
	
	
	//// Apply for overtime for employees until function class E
	data.msg_overtime_employees = gs.getMessage('msg_overtime_employees');
	
	
	////Request on call
	data.msg_infobox_1 = gs.getMessage('ROC_infobox_1');
	data.msg_infobox_2 =gs.getMessage('ROC_infobox_2');
	
	
	//////illness
	
	data.msg_Illness_msg_attachment=gs.getMessage('Illness msg attachment');
	
	
	//Replacement car messages
	data.replacementCarMsg1 = gs.getMessage('replacementCarMsg1');
	data.replacementCarMsg2 = gs.getMessage('replacementCarMsg2');
	data.replacementCarMsg3 = gs.getMessage('replacementCarMsg3');
	data.replacementCarMsg4 = gs.getMessage('replacementCarMsg4');
	data.replacementCarMsg5 = gs.getMessage('replacementCarMsg5');
	data.replacementCarMsg6 = gs.getMessage('replacementCarMsg6');
	data.replacementCarMsg7 = gs.getMessage('replacementCarMsg7');
	data.replacementCarMsg8 = gs.getMessage('replacementCarMsg8');
	data.replacementCarMsg9 = gs.getMessage('replacementCarMsg9');
	
	//Training cancellation
	data.trainingCancellation = gs.getMessage('trainingCancellation');
	////////////////////////////////////////////////////////////////////////////////////
	$sp.logStat('Catalog View', data.sc_cat_item.sys_class_name, data.sys_id, data.sc_cat_item.name);
})();

function getdisplayvalue() {
	var rec= new GlideRecord('question_choice');
	rec.addQuery('question',"47b9a7dc4f7b1200c7acf1728110c7ce");
	rec.addQuery('value',1);
	
	rec.query();
	while(rec.next()){
		gs.addInfoMessage(rec.text);
		
	}}
	
	//Get defaults-readonly variables
	function getDefaults(task_sys_id,record_producer){
		//Get HR Case
		var hrCase = new GlideRecord('hr_case');
		hrCase.addQuery('u_record_producer',record_producer);
		hrCase.addEncodedQuery('opened_forDYNAMIC90d1921e5f510100a9ad2572f2b477fe');
		hrCase.query();
		
		if (hrCase.next()) data.hrCase = hrCase.sys_id;
			
		//Get record producer variables
		var qa = new GlideRecord('question_answer');
		qa.addQuery('table_sys_id', data.hrCase);
		qa.addEncodedQuery('question.typeNOT IN12,20,24,19');
		qa.query();
		data.variables = [];
		
		while(qa.next()){
			var a ={};
			a.name = qa.question.name.toString();
			a.type = qa.question.type;
			
			if (!qa.value.nil()){
				//Convert yyyy-mm-dd --> dd--mm-yyyy
				if (a.type ==9)
					a.value = formatDate(qa.getValue('value'));
				else
					a.value = qa.getValue('value');
			}else a.value = '';
			
			/*gs.addInfoMessage('Name: '+a.name);
			gs.addInfoMessage('Value: '+a.value);*/
			data.variables.push(a);
			
		}
		
		
	}
	
	//Function to trigger close task UI action
	function updateStatus(taskID){
		
		var tasks = new GlideRecord('task');
		tasks.addQuery('sys_id', taskID);
		tasks.query();
		
		if (tasks.next()) {
			
			//Close task
			tasks.state = 3;
			gs.addInfoMessage('Task closed');
			tasks.update();
			data.taskClosed = true;
			//gs.addInfoMessage('Thank you for you answer, this task is now closed');
		}
		
	}
	]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>alex.huang</sys_created_by>
        <sys_created_on>2018-11-22 10:08:57</sys_created_on>
        <sys_id>8fa004f7db3d23006a22793ebf96199d</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>HR catalog item</sys_name>
        <sys_package display_value="job application" source="x_269830_job_appli">2ea5cf1adbb563006a22793ebf961912</sys_package>
        <sys_policy/>
        <sys_scope display_value="job application">2ea5cf1adbb563006a22793ebf961912</sys_scope>
        <sys_update_name>sp_widget_8fa004f7db3d23006a22793ebf96199d</sys_update_name>
        <sys_updated_by>alex.huang</sys_updated_by>
        <sys_updated_on>2018-11-22 10:08:57</sys_updated_on>
        <template><![CDATA[<div>
  
<div id="sc_cat_item" >
  <div class="row" ng-if="::data.sc_cat_item" >
   
    <div ng-if="::data.sc_cat_item.picture" class="col-sm-3">
      <div class="panel panel-{{::options.color}} b wrapper-lg text-center">
        <img class="img-responsive catalog-item-image" style="display: inline" ng-src="{{::data.sc_cat_item.picture}}" />
      </div>
    </div>
    
    <div ng-class="{true:'col-sm-9',false:'col-sm-12'}[data.sc_cat_item.picture.length > 0]">
      <div class="panel panel-default">
           <div class="kb-type">
    <h4 class="type-title"> <img src="Forms_GREY2x.png" width="32" height="32"/> Forms</h4>
  </div>
        <div class="wrapper-md">
          <h1 class="h2 m-t-none m-b-sm font-thin">{{::data.sc_cat_item.name}}</h1>
          <div class="text-muted">{{::data.sc_cat_item.short_description}}</div>
          <div class='tag-line' ng-repeat="tag in c.data.tags">
            <div class='tag'>
              <a class='tag-text'>{{tag}}</a>
            </div>
          </div>
        </div>
        <div ng-if="::data.sc_cat_item.description" class="wrapper-md b-t">
          <div ng-bind-html="::data.sc_cat_item.description"></div>
        </div>
        <div >
          <sp-cat-item item="::data.sc_cat_item" />
          <form>
            <div ng-class="{'b-t wrapper-md': data.sc_cat_item._view.length}">
              <!-- display view and model -->
              <sp-model form-model="::data.sc_cat_item" mandatory="mandatory"></sp-model>
            </div>
            <div class="b-t wrapper-md">
              <div class="m-b" ng-if="data.sc_cat_item.price || data.sc_cat_item.recurring_price" >
                <h4 ng-if="data.sc_cat_item.price" class="cat_item_price">${Price}: {{data.sc_cat_item.price}}</h4>
                <em ng-if="data.sc_cat_item.recurring_price" class="cat_item_price">${Recurring Price}: {{data.sc_cat_item.recurring_price}}</em>
              </div>
              <now-attachments-list template="sp_attachment_single_line" ></now-attachments-list>
              <button name="submit" ng-disabled="submitted1" ng-click="triggerOnSubmit()" class="btn btn-primary">${{{submitButtonMsg}}}</button>
          <!--    <button ng-if="pdfButtonAvailable()" name="generatePDF" ng-click="generatePDF()"   class="btn btn-primary">${Generate PDF}</button>-->
            
             <span ng-if="pdfButtonAvailable()" ng-disabled="submitted" name="Downloadpdf" ng-click="generatePDF()"  class="btn btn-primary">${Generate PDF}</span>
    
              <span ng-if="submitting" style="padding-left:4px">${Submitting...}</span>
              <span ng-if="submitted2" ng-init="c.openModal()" style="padding-left:4px"></span>
              <span ng-show="!submitted"><label style="float:right;font-weight:normal;cursor:pointer;"><sp-attachment-button></sp-attachment-button><span style="padding-left:4px;">${Add attachments}</span></label></span>
              <div ng-if="hasMandatory(mandatory)" class="alert alert-info" style="margin-top: .5em">
                <span ng-if="hasMandatory(mandatory)">${Mandatory fields} </span>
                <span ng-repeat="f in mandatory" class="label label-danger" style="text-align: justify;">{{::f.label}}</span>
              </div>
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>
  
  <sp-message-dialog name="delete_attachment" 
                       title="Delete Attachment" 
                       message="Are you sure?" 
                       ok="OK" 
                       cancel="Cancel" 
                       dialog-class="delete-dialog"/>

  <div ng-if="::!data.sc_cat_item" >
    <div class="panel panel-default" ng-if="::data.sys_id">
      <div class="panel-heading"><h4 class="panel-title">${Item not found: {{::data.sys_id}}}</h4></div>
      <div class="panel-body wrapper">
        <p>${This item is not found or currently not available}</p>
        <p>${Suggestions}:</p>
        <ul>
          <li>${Try searching for the item}</li>
          <li>${Go to the Service Catalog homepage}</li>
          <li>${Contact your portal administrator}</li>
        </ul>
      </div>
    </div>
  </div>
</div>
   <script type="text/ng-template" id="modalTemplate">
<div class="panel panel-default">
<div class="panel-body wrapper-xl">
<h3 style="color:green;"><span class="glyphicon glyphicon-check"></span>${ Success!}</h3><br>
<p ng-if="c.msg_submitModalExtra">{{c.msg_submitModalExtra}}</p><br>
<div ng-if="c.htmlMessage!=''" ng-bind-html="c.htmlMessage"></div><br>
<p>{{::data.msg_submitModal}}</p><br>
</div>
<div class="panel-footer text-right">
<button class="btn btn-primary" ng-click="c.closeModal()">${Close}</button>
</div>
</div>
</script>
</div>]]></template>
    </sp_widget>
</record_update>
